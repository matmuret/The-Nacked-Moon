{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/FashionShow.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment, useContext, useState } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useParams } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nexport default function FashionShow() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedImg, setSelectedImg] = useState(null);\n  const {\n    getAlbum,\n    setGetAlbum\n  } = useContext(MyContext);\n  /* const [isOpen, setIsOpen] = useState(!isOpen) */\n\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const url = `http://localhost:5000/api/albumup/${id}`;\n        const res = await fetch(url);\n        console.log({\n          url\n        });\n        const album = await res.json();\n        console.log(album);\n        setGetAlbum(album);\n      } catch (err) {}\n    };\n\n    getResult();\n  }, []);\n  console.log(getAlbum);\n\n  const callBoth = url => {\n    setIsOpen(true);\n    setSelectedImg(url);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    onRequestClose: () => setIsOpen(false),\n    style: {\n      overlay: {\n        backgroundColor: \"rgba(10, 7, 7, 0.753)\"\n      },\n      content: {\n        backgroundColor: \"black\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modalDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"modalImage\",\n    src: selectedImg,\n    key: selectedImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"VisionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, getAlbum && getAlbum.albumName), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"soulsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, getAlbum.images.map(item => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      src: item,\n      key: item,\n      onClick: () => {\n        callBoth(item);\n      },\n      classname: \"soulsItems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    });\n  }))));\n}\n\n_s(FashionShow, \"4JHiQ6tLLjM7w/it5/aiSrpJr88=\", false, function () {\n  return [useParams];\n});\n\n_c = FashionShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"FashionShow\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/FashionShow.jsx"],"names":["React","useEffect","Fragment","useContext","useState","MyContext","useParams","Modal","FashionShow","isOpen","setIsOpen","selectedImg","setSelectedImg","getAlbum","setGetAlbum","id","console","log","getResult","url","res","fetch","album","json","err","callBoth","overlay","backgroundColor","content","albumName","images","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAA6C,OAAOC,KAAP,MAAkB,aAAlB;AAI7C,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BX,UAAU,CAACE,SAAD,CAA5C;AACA;;AACA,QAAM;AAACU,IAAAA;AAAD,MAAOT,SAAS,EAAtB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAI,qCAAoCJ,EAAG,EAApD;AACA,cAAMK,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEE,UAAAA;AAAF,SAAZ;AACA,cAAMG,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAR,QAAAA,WAAW,CAACQ,KAAD,CAAX;AAED,OARD,CAQE,OAAOE,GAAP,EAAY,CAAE;AACjB,KAVD;;AAWAN,IAAAA,SAAS;AACV,GAbQ,EAaN,EAbM,CAAT;AAcAF,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AACA,QAAMY,QAAQ,GAAIN,GAAD,IAAS;AACxBT,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,IAAAA,cAAc,CAACO,GAAD,CAAd;AACD,GAHD;;AAIA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,KAAD;AACD,IAAA,MAAM,EAAEV,MADP;AAED,IAAA,cAAc,EAAE,MAAMC,SAAS,CAAC,KAAD,CAF9B;AAGD,IAAA,KAAK,EACH;AACEgB,MAAAA,OAAO,EAAE;AACPC,QAAAA,eAAe,EAAE;AADV,OADX;AAIEC,MAAAA,OAAO,EAAE;AACPD,QAAAA,eAAe,EAAE;AADV;AAJX,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,OAAO,EAAE,MAAMjB,SAAS,CAAC,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADA,eAIA;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEC,WAAjC;AAA8C,IAAA,GAAG,EAAEA,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CAdD,CADH,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BE,QAAQ,IAAIA,QAAQ,CAACgB,SAAlD,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGEhB,QAAQ,CAACiB,MAAT,CAAgBC,GAAhB,CAAqBC,IAAD,IAAU;AAC5B,wBAEI;AACE,MAAA,GAAG,EAAEA,IADP;AAEE,MAAA,GAAG,EAAEA,IAFP;AAGE,MAAA,OAAO,EAAE,MAAM;AAACP,QAAAA,QAAQ,CAACO,IAAD,CAAR;AAAe,OAHjC;AAIE,MAAA,SAAS,EAAC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAUD,GAXD,CAHF,CAHF,CAtBF,CADF;AA6CD;;GAvEuBxB,W;UAKTF,S;;;KALSE,W","sourcesContent":["import React, { useEffect, Fragment, useContext,useState } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useParams } from \"react-router-dom\";import Modal from \"react-modal\";\n\n\n\nexport default function FashionShow() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedImg, setSelectedImg] = useState(null)\n  const { getAlbum, setGetAlbum } = useContext(MyContext);\n  /* const [isOpen, setIsOpen] = useState(!isOpen) */\n  const {id} = useParams();\n  console.log(id);\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const url = `http://localhost:5000/api/albumup/${id}`;\n        const res = await fetch(url);\n        console.log({ url });\n        const album = await res.json();\n        console.log(album);\n        setGetAlbum(album);\n       \n      } catch (err) {}\n    };\n    getResult();\n  }, []);\n  console.log(getAlbum);\n  const callBoth = (url) => {\n    setIsOpen(true)\n    setSelectedImg(url)\n  };\n  return (\n    <Fragment>\n       <Modal \n      isOpen={isOpen} \n      onRequestClose={() => setIsOpen(false)}\n      style={\n        {\n          overlay: {\n            backgroundColor: \"rgba(10, 7, 7, 0.753)\",\n          },\n          content: {\n            backgroundColor: \"black\",\n          },\n        }\n      }\n      >\n        <div className='modalDiv'>\n        <button onClick={() => setIsOpen(false)}>\n          <h3>Close</h3>\n        </button>\n        <img className='modalImage' src={selectedImg} key={selectedImg}/>\n        </div>\n      </Modal>\n      <div>\n        <h1 className=\"VisionTitle\">{getAlbum && getAlbum.albumName}</h1>\n        <br></br>\n        <div className=\"soulsContainer\">\n          \n        {\n          getAlbum.images.map((item) => {\n            return (\n             \n                <img\n                  src={item}\n                  key={item}\n                  onClick={() => {callBoth(item)}}\n                  classname=\"soulsItems\"\n                />\n              \n            );\n          })} \n          </div>\n      </div>\n    </Fragment>\n  );\n}  "]},"metadata":{},"sourceType":"module"}