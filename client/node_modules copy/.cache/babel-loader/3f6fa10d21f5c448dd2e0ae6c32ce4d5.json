{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/Productup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  image: yup.mixed().required(\"you need to provide a file\").test(\"filesize\", \"The file is too large\", value => {\n    return value && value[0].size <= 200000;\n  }),\n  date: yup.date(),\n  category: yup.string(),\n  description: yup.string(),\n  price: yup.number().required(),\n  countInStock: yup.number().required(),\n  rating: yup.number(),\n  numReviews: yup.number()\n});\nexport default function Productup() {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  }); // initialize the hook\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    formData.append(\"name\", data.name[0]);\n    const res = await fetch(\"http://localhost:5000/api/productsupload\", {\n      method: \"POST\",\n      body: formData\n    }).then(res => res.json());\n    alert(JSON.stringify(res));\n    console.log(formData);\n  };\n\n  return /*#__PURE__*/React.createElement(Fade, {\n    bottom: true,\n    cascade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), errors.name && \"Name is required.\", /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Category\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"category\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Description\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"category\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), errors.description && \"Description is required.\", /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Price\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"price\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"In Stock\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"countInStock\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), errors.name && \"How many products are in Stock?\", /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Rating\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"rating\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"image\",\n    ref: register,\n    required: true,\n    type: \"file\",\n    name: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), errors.image && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 30\n    }\n  }, errors.image.message), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n}\n\n_s(Productup, \"iyH731LTjAbxnbpM16EGorBPneQ=\", false, function () {\n  return [useForm];\n});\n\n_c = Productup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Productup\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/Productup.js"],"names":["React","useForm","Fade","yupResolver","yup","schema","object","shape","name","string","required","image","mixed","test","value","size","date","category","description","price","number","countInStock","rating","numReviews","Productup","register","handleSubmit","errors","resolver","onSubmit","data","formData","FormData","append","res","fetch","method","body","then","json","alert","JSON","stringify","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,EAD0B;AAEhCC,EAAAA,KAAK,EAAEP,GAAG,CACPQ,KADI,GAEJF,QAFI,CAEK,4BAFL,EAGJG,IAHI,CAGC,UAHD,EAGa,uBAHb,EAGuCC,KAAD,IAAW;AACpD,WAAOA,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,IAAiB,MAAjC;AACD,GALI,CAFyB;AAQhCC,EAAAA,IAAI,EAAEZ,GAAG,CAACY,IAAJ,EAR0B;AAShCC,EAAAA,QAAQ,EAAEb,GAAG,CAACK,MAAJ,EATsB;AAUhCS,EAAAA,WAAW,EAAEd,GAAG,CAACK,MAAJ,EAVmB;AAWhCU,EAAAA,KAAK,EAAEf,GAAG,CAACgB,MAAJ,GAAaV,QAAb,EAXyB;AAYhCW,EAAAA,YAAY,EAAEjB,GAAG,CAACgB,MAAJ,GAAaV,QAAb,EAZkB;AAahCY,EAAAA,MAAM,EAAElB,GAAG,CAACgB,MAAJ,EAbwB;AAchCG,EAAAA,UAAU,EAAEnB,GAAG,CAACgB,MAAJ;AAdoB,CAAnB,CAAf;AAiBA,eAAe,SAASI,SAAT,GAAqB;AAAA;;AAClC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqC1B,OAAO,CAAC;AACjD2B,IAAAA,QAAQ,EAAEzB,WAAW,CAACE,MAAD;AAD4B,GAAD,CAAlD,CADkC,CAG9B;;AAEJ,QAAMwB,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAI,CAACtB,IAAL,CAAU,CAAV,CAAxB;AAGA,UAAM0B,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAAD,EAA6C;AAClEC,MAAAA,MAAM,EAAE,MAD0D;AAElEC,MAAAA,IAAI,EAAEN;AAF4D,KAA7C,CAAL,CAGfO,IAHe,CAGTJ,GAAD,IAASA,GAAG,CAACK,IAAJ,EAHC,CAAlB;AAIAC,IAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeR,GAAf,CAAD,CAAL;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACD,GAXD;;AAaA,sBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,OAAO,EAAE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEL,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,eAIE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,GAAG,EAAEJ,QAAQ,CAAC;AAAEf,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKGiB,MAAM,CAACnB,IAAP,IAAe,mBALlB,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CANF,eASE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,GAAG,EAAEiB,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAVF,eAaE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,GAAG,EAAEA,QAAQ,CAAC;AAAEf,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAkBGiB,MAAM,CAACT,WAAP,IAAsB,0BAlBzB,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAnBF,eAsBE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,GAAG,EAAEO,QAAQ,CAAC;AAAEf,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CA3BF,eA8BE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,GAAG,EAAEe,QAAQ,CAAC;AAAEf,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BF,EAmCGiB,MAAM,CAACnB,IAAP,IAAe,iCAnClB,eAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CApCF,eAuCE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,GAAG,EAAEiB,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCF,eAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAzCF,eA4CE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAEA,QAFP;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,IAAI,EAAC,OALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,EAmDGE,MAAM,CAAChB,KAAP,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIgB,MAAM,CAAChB,KAAP,CAAakC,OAAjB,CAnDnB,eAoDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApDF,eAqDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CArDF,CADF,CADF,CADF,CADF;AAiED;;GAnFuBrB,S;UACqBvB,O;;;KADrBuB,S","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  image: yup\n    .mixed()\n    .required(\"you need to provide a file\")\n    .test(\"filesize\", \"The file is too large\", (value) => {\n      return value && value[0].size <= 200000;\n    }),\n  date: yup.date(),\n  category: yup.string(),\n  description: yup.string(),\n  price: yup.number().required(),\n  countInStock: yup.number().required(),\n  rating: yup.number(),\n  numReviews: yup.number(),\n});\n\nexport default function Productup() {\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  }); // initialize the hook\n\n  const onSubmit = async (data) => {\n    const formData = new FormData();\n    formData.append(\"name\", data.name[0]);\n    \n\n    const res = await fetch(\"http://localhost:5000/api/productsupload\", {\n      method: \"POST\",\n      body: formData,\n    }).then((res) => res.json());\n    alert(JSON.stringify(res));\n    console.log(formData);\n  };\n\n  return (\n    <Fade bottom cascade={true}>\n      <div className=\"authContainer\">\n        <div className=\"form2\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <label>\n              <h3>Name</h3>\n            </label>\n            <input type=\"text\" name=\"name\" ref={register({ required: true })} />\n            {errors.name && \"Name is required.\"}\n            <label>\n              <h3>Category</h3>\n            </label>\n            <input type=\"text\" name=\"category\" ref={register} />\n            <label>\n              <h3>Description</h3>\n            </label>\n            <input\n              type=\"text\"\n              name=\"category\"\n              ref={register({ required: true })}\n            />\n            {errors.description && \"Description is required.\"}\n            <label>\n              <h3>Price</h3>\n            </label>\n            <input\n              type=\"text\"\n              name=\"price\"\n              ref={register({ required: true })}\n            />\n            <label>\n              <h3>In Stock</h3>\n            </label>\n            <input\n              type=\"text\"\n              name=\"countInStock\"\n              ref={register({ required: true })}\n            />\n            {errors.name && \"How many products are in Stock?\"}\n            <label>\n              <h3>Rating</h3>\n            </label>\n            <input type=\"text\" name=\"rating\" ref={register} />\n\n            <label>\n              <h3>Upload</h3>\n            </label>\n            <input\n              name=\"image\"\n              ref={register}\n              required\n              type=\"file\"\n              name=\"image\"\n            />\n            {errors.image && <p>{errors.image.message}</p>}\n            <br></br>\n            <button>\n              <h3>Submit</h3>\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}