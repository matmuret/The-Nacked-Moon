{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/CreateAlbum.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport MyContext from \"../Context/MyContext\";\nexport default function CreateAlbum(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialize the hook\n\n  const {\n    newAlbum,\n    setNewAlbum\n  } = useContext(MyContext);\n  console.log(props);\n\n  const onSubmit = async data => {\n    _s();\n\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    const name = params.get('name');\n    const formData = new FormData();\n\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData\n    });\n    const album = await res.json();\n    setNewAlbum(album.createdAlbum);\n    alert(\"Successfully Submitted!\");\n    console.log(album);\n  };\n\n  _s(onSubmit, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", true);\n\n  const addPhoto = () => {\n    props.history.push(`/albumedit/${newAlbum._id}`); // ?name=${newAlbum.createAlbum.albumName}\n  };\n\n  return /*#__PURE__*/React.createElement(Fade, {\n    bottom: true,\n    cascade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"albumName\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), errors.name && \"Name is required.\", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Category \")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, name), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Description\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"description\",\n    ref: register({\n      required: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), errors.description && \"Description is required.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addPhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Add photos\"))))));\n}\n\n_s2(CreateAlbum, \"guPrgpShFEFOLKctBSPCvvJtmQ8=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateAlbum;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAlbum\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/CreateAlbum.js"],"names":["React","useContext","useForm","Fade","MyContext","CreateAlbum","props","register","handleSubmit","errors","newAlbum","setNewAlbum","console","log","onSubmit","data","location","useLocation","params","URLSearchParams","search","name","get","formData","FormData","key","append","res","fetch","method","body","album","json","createdAlbum","alert","addPhoto","history","push","_id","required","description"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport MyContext from \"../Context/MyContext\";\n\nexport default function CreateAlbum(props) {\n  const { register, handleSubmit, errors } = useForm(); // initialize the hook\n  const { newAlbum, setNewAlbum } = useContext(MyContext);\n  console.log(props)\n\n  const onSubmit = async (data) => {\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    const name = params.get('name');\n  \n    const formData = new FormData();\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    const album = await res.json();\n    setNewAlbum(album.createdAlbum);\n    alert(\"Successfully Submitted!\");\n    console.log(album);\n  };\n\n  const addPhoto = () => {\n    props.history.push(`/albumedit/${newAlbum._id}`); // ?name=${newAlbum.createAlbum.albumName}\n  };\n\n  return (\n    <Fade bottom cascade={true}>\n      <div className=\"authContainer\">\n        <div className=\"form2\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <label>\n              <h3>Name</h3>\n            </label>\n            <input\n              type=\"text\"\n              name=\"albumName\"\n              ref={register({ required: true })}\n            />\n            {errors.name && \"Name is required.\"}\n            <label htmlFor=\"category\">\n              <h3>Category </h3>\n            </label>\n  <h2>{name}</h2>\n            {/* <select id=\"category\" name=\"category\" ref={register}>\n              <option value=\"home\">home</option>\n              <option value=\"fashion\">fashion</option>\n              <option value=\"outdoors\">outdoors</option>\n              <option value=\"souls\">souls</option>\n              <option value=\"projects\">projects</option>\n            </select> */}\n\n            <label>\n              <h3>Description</h3>\n            </label>\n            <textarea\n              type=\"text\"\n              name=\"description\"\n              ref={register({ required: false })}\n            />\n            {errors.description && \"Description is required.\"}\n\n            <br></br>\n            <button type=\"submit\">\n              <h3>Submit</h3>\n            </button>\n            <button onClick={addPhoto}>\n              <h3>Add photos</h3>\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}