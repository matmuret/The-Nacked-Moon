{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/CreateAlbum.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport { useLocation } from \"../../node_modules/react-use/lib/index\";\nimport MyContext from \"../Context/MyContext\";\nexport default function CreateAlbum(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialize the hook\n\n  const {\n    newAlbum,\n    setNewAlbum\n  } = useContext(MyContext);\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\n  console.log(params);\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData\n    });\n    const album = await res.json();\n    setNewAlbum(album.createdAlbum);\n\n    if (newAlbum._id) {\n      props.history.push(`/albumedit/${newAlbum._id}`); // ?name=${newAlbum.createAlbum.albumName}\n    }\n    /* ;\n    console.log(album); */\n\n  };\n  /* const addPhoto = () => {\n   \n  }; */\n\n\n  return /*#__PURE__*/React.createElement(Fade, {\n    bottom: true,\n    cascade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"albumName\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), errors.name && \"Name is required.\", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Category \")), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    name: \"category\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Description\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"description\",\n    ref: register({\n      required: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), errors.description && \"Description is required.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n}\n\n_s(CreateAlbum, \"ndYg74nrMahHjZBupwwacQnEz9w=\", false, function () {\n  return [useForm, useLocation];\n});\n\n_c = CreateAlbum;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAlbum\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/CreateAlbum.js"],"names":["React","useContext","useForm","Fade","useLocation","MyContext","CreateAlbum","props","register","handleSubmit","errors","newAlbum","setNewAlbum","location","params","URLSearchParams","search","name","get","console","log","onSubmit","data","formData","FormData","key","append","res","fetch","method","body","album","json","createdAlbum","_id","history","push","required","description"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport { useLocation } from \"../../node_modules/react-use/lib/index\";\nimport MyContext from \"../Context/MyContext\";\n\nexport default function CreateAlbum(props) {\n  const { register, handleSubmit, errors } = useForm(); // initialize the hook\n  const { newAlbum, setNewAlbum } = useContext(MyContext);\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\nconsole.log(params)\n\n  const onSubmit = async (data) => {\n   \n  \n    const formData = new FormData();\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    const album = await res.json();\n    setNewAlbum(album.createdAlbum);\n    if(newAlbum._id){\n      props.history.push(`/albumedit/${newAlbum._id}`); // ?name=${newAlbum.createAlbum.albumName}\n    }\n    \n    /* ;\n    console.log(album); */\n  };\n\n  /* const addPhoto = () => {\n   \n  }; */\n\n  return (\n    <Fade bottom cascade={true}>\n      <div className=\"authContainer\">\n        <div className=\"form2\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <label>\n              <h3>Name</h3>\n            </label>\n            <input\n              type=\"text\"\n              name=\"albumName\"\n              ref={register({ required: true })}\n            />\n            {errors.name && \"Name is required.\"}\n            <label htmlFor=\"category\">\n              <h3>Category </h3>\n            </label>\n  \n            <select id=\"category\" name=\"category\" ref={register}>\n              <option value={name}>{name}</option>\n              {/* <option value=\"fashion\">fashion</option>\n              <option value=\"outdoors\">outdoors</option>\n              <option value=\"souls\">souls</option>\n              <option value=\"projects\">projects</option> */}\n            </select>\n\n            <label>\n              <h3>Description</h3>\n            </label>\n            <textarea\n              type=\"text\"\n              name=\"description\"\n              ref={register({ required: false })}\n            />\n            {errors.description && \"Description is required.\"}\n\n            <br></br>\n            <button type=\"submit\" >\n              <h3>Submit</h3>\n            </button>\n           {/*  <button onClick={addPhoto}>\n              <h3>Add photos</h3>\n            </button> */}\n          </form>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}