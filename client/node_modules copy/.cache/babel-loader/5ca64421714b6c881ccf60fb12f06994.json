{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar react_1 = require(\"react\");\n\nvar useUpdate_1 = tslib_1.__importDefault(require(\"./useUpdate\"));\n\nvar resolveHookState_1 = require(\"./util/resolveHookState\");\n\nfunction useList(initialList) {\n  if (initialList === void 0) {\n    initialList = [];\n  }\n\n  var list = react_1.useRef(resolveHookState_1.resolveHookState(initialList));\n  var update = useUpdate_1.default();\n  var actions = react_1.useMemo(function () {\n    var a = {\n      set: function (newList) {\n        list.current = resolveHookState_1.resolveHookState(newList, list.current);\n        update();\n      },\n      push: function () {\n        var items = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          items[_i] = arguments[_i];\n        }\n\n        items.length && actions.set(function (curr) {\n          return curr.concat(items);\n        });\n      },\n      updateAt: function (index, item) {\n        actions.set(function (curr) {\n          var arr = curr.slice();\n          arr[index] = item;\n          return arr;\n        });\n      },\n      insertAt: function (index, item) {\n        actions.set(function (curr) {\n          var arr = curr.slice();\n          index > arr.length ? arr[index] = item : arr.splice(index, 0, item);\n          return arr;\n        });\n      },\n      update: function (predicate, newItem) {\n        actions.set(function (curr) {\n          return curr.map(function (item) {\n            return predicate(item, newItem) ? newItem : item;\n          });\n        });\n      },\n      updateFirst: function (predicate, newItem) {\n        var index = list.current.findIndex(function (item) {\n          return predicate(item, newItem);\n        });\n        index >= 0 && actions.updateAt(index, newItem);\n      },\n      upsert: function (predicate, newItem) {\n        var index = list.current.findIndex(function (item) {\n          return predicate(item, newItem);\n        });\n        index >= 0 ? actions.updateAt(index, newItem) : actions.push(newItem);\n      },\n      sort: function (compareFn) {\n        actions.set(function (curr) {\n          return curr.slice().sort(compareFn);\n        });\n      },\n      filter: function (callbackFn, thisArg) {\n        actions.set(function (curr) {\n          return curr.slice().filter(callbackFn, thisArg);\n        });\n      },\n      removeAt: function (index) {\n        actions.set(function (curr) {\n          var arr = curr.slice();\n          arr.splice(index, 1);\n          return arr;\n        });\n      },\n      clear: function () {\n        actions.set([]);\n      },\n      reset: function () {\n        actions.set(resolveHookState_1.resolveHookState(initialList).slice());\n      }\n    };\n    /**\n     * @deprecated Use removeAt method instead\n     */\n\n    a.remove = a.removeAt;\n    return a;\n  }, []);\n  return [list.current, actions];\n}\n\nexports.default = useList;","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/node_modules/react-use/lib/useList.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","react_1","useUpdate_1","__importDefault","resolveHookState_1","useList","initialList","list","useRef","resolveHookState","update","default","actions","useMemo","a","set","newList","current","push","items","_i","arguments","length","curr","concat","updateAt","index","item","arr","slice","insertAt","splice","predicate","newItem","map","updateFirst","findIndex","upsert","sort","compareFn","filter","callbackFn","thisArg","removeAt","clear","reset","remove"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar useUpdate_1 = tslib_1.__importDefault(require(\"./useUpdate\"));\nvar resolveHookState_1 = require(\"./util/resolveHookState\");\nfunction useList(initialList) {\n    if (initialList === void 0) { initialList = []; }\n    var list = react_1.useRef(resolveHookState_1.resolveHookState(initialList));\n    var update = useUpdate_1.default();\n    var actions = react_1.useMemo(function () {\n        var a = {\n            set: function (newList) {\n                list.current = resolveHookState_1.resolveHookState(newList, list.current);\n                update();\n            },\n            push: function () {\n                var items = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    items[_i] = arguments[_i];\n                }\n                items.length && actions.set(function (curr) { return curr.concat(items); });\n            },\n            updateAt: function (index, item) {\n                actions.set(function (curr) {\n                    var arr = curr.slice();\n                    arr[index] = item;\n                    return arr;\n                });\n            },\n            insertAt: function (index, item) {\n                actions.set(function (curr) {\n                    var arr = curr.slice();\n                    index > arr.length ? (arr[index] = item) : arr.splice(index, 0, item);\n                    return arr;\n                });\n            },\n            update: function (predicate, newItem) {\n                actions.set(function (curr) { return curr.map(function (item) { return (predicate(item, newItem) ? newItem : item); }); });\n            },\n            updateFirst: function (predicate, newItem) {\n                var index = list.current.findIndex(function (item) { return predicate(item, newItem); });\n                index >= 0 && actions.updateAt(index, newItem);\n            },\n            upsert: function (predicate, newItem) {\n                var index = list.current.findIndex(function (item) { return predicate(item, newItem); });\n                index >= 0 ? actions.updateAt(index, newItem) : actions.push(newItem);\n            },\n            sort: function (compareFn) {\n                actions.set(function (curr) { return curr.slice().sort(compareFn); });\n            },\n            filter: function (callbackFn, thisArg) {\n                actions.set(function (curr) { return curr.slice().filter(callbackFn, thisArg); });\n            },\n            removeAt: function (index) {\n                actions.set(function (curr) {\n                    var arr = curr.slice();\n                    arr.splice(index, 1);\n                    return arr;\n                });\n            },\n            clear: function () {\n                actions.set([]);\n            },\n            reset: function () {\n                actions.set(resolveHookState_1.resolveHookState(initialList).slice());\n            },\n        };\n        /**\n         * @deprecated Use removeAt method instead\n         */\n        a.remove = a.removeAt;\n        return a;\n    }, []);\n    return [list.current, actions];\n}\nexports.default = useList;\n"]},"metadata":{},"sourceType":"script"}