{"ast":null,"code":"/* import dataShop from \"./db/dataShop\"; */\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { cartReducer } from \"./Reducers/cartReducer\";\nimport { productDetailsReducer, productListReducer } from \"./Reducers/productReducers\";\nimport { userRegisterReducer, userSignInREducer } from \"./Reducers/userReducer\"; //You don't want that everything desappears everytime you referesh the page\n\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n    shippingAddress: loc\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSignInREducer,\n  userRegister: userRegisterReducer\n});\n/* const reducer = (state,action) =>{\n    return {products:dataShop.products}\n} */\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","productDetailsReducer","productListReducer","userRegisterReducer","userSignInREducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","loc","reducer","productList","productDetails","userRegister","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SACEC,qBADF,EAEEC,kBAFF,QAGO,4BAHP;AAIA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,wBAAvD,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACNC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADM,GAEN;AAHM,GADO;AAMnBG,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAHA;AAIFK,IAAAA,eAAe,EAAEC;AAJf;AANa,CAArB;AAaA,MAAMC,OAAO,GAAGlB,eAAe,CAAC;AAC9BmB,EAAAA,WAAW,EAAEf,kBADiB;AAE9BgB,EAAAA,cAAc,EAAEjB,qBAFc;AAG9BW,EAAAA,IAAI,EAAEZ,WAHwB;AAI9BM,EAAAA,UAAU,EAAEF,iBAJkB;AAK9Be,EAAAA,YAAY,EAAEhB;AALgB,CAAD,CAA/B;AAOA;AACA;AACA;;AAEA,MAAMiB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C1B,OAAvE;AACA,MAAM2B,KAAK,GAAG5B,WAAW,CACvBqB,OADuB,EAEvBX,YAFuB,EAGvBe,eAAe,CAACvB,eAAe,CAACE,KAAD,CAAhB,CAHQ,CAAzB;AAMA,eAAewB,KAAf","sourcesContent":["/* import dataShop from \"./db/dataShop\"; */\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { cartReducer } from \"./Reducers/cartReducer\";\nimport {\n  productDetailsReducer,\n  productListReducer,\n} from \"./Reducers/productReducers\";\nimport { userRegisterReducer, userSignInREducer } from \"./Reducers/userReducer\";\n\n//You don't want that everything desappears everytime you referesh the page\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem(\"userInfo\")\n      ? JSON.parse(localStorage.getItem(\"userInfo\"))\n      : null,\n  },\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\")\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\n      : [],\n      shippingAddress: loc\n  },\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSignInREducer,\n  userRegister: userRegisterReducer,\n});\n/* const reducer = (state,action) =>{\n    return {products:dataShop.products}\n} */\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}