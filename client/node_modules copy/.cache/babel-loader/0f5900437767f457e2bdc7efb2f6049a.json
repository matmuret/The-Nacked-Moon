{"ast":null,"code":"/* import dataShop from \"./db/dataShop\"; */\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { cartReducer } from \"./Reducers/cartReducer\";\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer, orderPayReducer } from \"./Reducers/orderReducer\";\nimport { productDetailsReducer, productListReducer, productUpdateReducer, productDeleteReducer } from \"./Reducers/productReducers\";\nimport { userDetailsReducer, userRegisterReducer, userSignInREducer, userUpdateProfileReducer, usersDetailsReducer } from \"./Reducers/userReducer\"; //You don't want that everything desappears everytime you referesh the page\n\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null\n  },\n  cart: {\n    cartItems: localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [],\n    shippingAddress: localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {},\n    paymentMethod: 'PayPal'\n  }\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productUpdate: productUpdateReducer,\n  productDelete: productDeleteReducer,\n  cart: cartReducer,\n  userSignin: userSignInREducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  usersDetails: usersDetailsReducer\n});\n/* const reducer = (state,action) =>{\n    return {products:dataShop.products}\n} */\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/store.js"],"names":["createStore","compose","applyMiddleware","combineReducers","thunk","cartReducer","orderCreateReducer","orderDetailsReducer","orderMineListReducer","orderPayReducer","productDetailsReducer","productListReducer","productUpdateReducer","productDeleteReducer","userDetailsReducer","userRegisterReducer","userSignInREducer","userUpdateProfileReducer","usersDetailsReducer","initialState","userSignin","userInfo","localStorage","getItem","JSON","parse","cart","cartItems","shippingAddress","paymentMethod","reducer","productList","productDetails","productUpdate","productDelete","userRegister","orderCreate","orderDetails","orderPay","orderMineList","userDetails","userUpdateProfile","usersDetails","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,oBAAlD,EAAwEC,eAAxE,QAA+F,yBAA/F;AACA,SACEC,qBADF,EAEEC,kBAFF,EAGEC,oBAHF,EAIEC,oBAJF,QAKO,4BALP;AAMA,SAASC,kBAAT,EAA6BC,mBAA7B,EAAkDC,iBAAlD,EAAqEC,wBAArE,EAA+FC,mBAA/F,QAA0H,wBAA1H,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACNC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADM,GAEN;AAHM,GADO;AAMnBG,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAEL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAHA;AAIJK,IAAAA,eAAe,EAAEN,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACbC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADa,GAEb,EANA;AAOJM,IAAAA,aAAa,EAAE;AAPX;AANa,CAArB;AAgBA,MAAMC,OAAO,GAAG3B,eAAe,CAAC;AAC9B4B,EAAAA,WAAW,EAAEpB,kBADiB;AAE9BqB,EAAAA,cAAc,EAAEtB,qBAFc;AAG9BuB,EAAAA,aAAa,EAACrB,oBAHgB;AAI9BsB,EAAAA,aAAa,EAACrB,oBAJgB;AAK9Ba,EAAAA,IAAI,EAAErB,WALwB;AAM9Be,EAAAA,UAAU,EAAEJ,iBANkB;AAO9BmB,EAAAA,YAAY,EAAEpB,mBAPgB;AAQ9BqB,EAAAA,WAAW,EAAC9B,kBARkB;AAS9B+B,EAAAA,YAAY,EAAC9B,mBATiB;AAU9B+B,EAAAA,QAAQ,EAAE7B,eAVoB;AAW9B8B,EAAAA,aAAa,EAAE/B,oBAXe;AAY9BgC,EAAAA,WAAW,EAAC1B,kBAZkB;AAa9B2B,EAAAA,iBAAiB,EAACxB,wBAbY;AAc9ByB,EAAAA,YAAY,EAACxB;AAdiB,CAAD,CAA/B;AAgBA;AACA;AACA;;AAEA,MAAMyB,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+C5C,OAAvE;AACA,MAAM6C,KAAK,GAAG9C,WAAW,CACvB8B,OADuB,EAEvBX,YAFuB,EAGvBwB,eAAe,CAACzC,eAAe,CAACE,KAAD,CAAhB,CAHQ,CAAzB;AAMA,eAAe0C,KAAf","sourcesContent":["/* import dataShop from \"./db/dataShop\"; */\nimport { createStore, compose, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { cartReducer } from \"./Reducers/cartReducer\";\nimport { orderCreateReducer, orderDetailsReducer, orderMineListReducer, orderPayReducer } from \"./Reducers/orderReducer\";\nimport {\n  productDetailsReducer,\n  productListReducer,\n  productUpdateReducer,\n  productDeleteReducer\n} from \"./Reducers/productReducers\";\nimport { userDetailsReducer, userRegisterReducer, userSignInREducer, userUpdateProfileReducer, usersDetailsReducer } from \"./Reducers/userReducer\";\n\n//You don't want that everything desappears everytime you referesh the page\nconst initialState = {\n  userSignin: {\n    userInfo: localStorage.getItem(\"userInfo\")\n      ? JSON.parse(localStorage.getItem(\"userInfo\"))\n      : null,\n  },\n  cart: { \n    cartItems: localStorage.getItem(\"cartItems\")\n      ? JSON.parse(localStorage.getItem(\"cartItems\"))\n      : [],\n    shippingAddress: localStorage.getItem(\"shippingAddress\")\n      ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n      : {},\n    paymentMethod: 'PayPal'\n  },\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productUpdate:productUpdateReducer,\n  productDelete:productDeleteReducer,\n  cart: cartReducer,\n  userSignin: userSignInREducer,\n  userRegister: userRegisterReducer,\n  orderCreate:orderCreateReducer,\n  orderDetails:orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderMineList: orderMineListReducer,\n  userDetails:userDetailsReducer,\n  userUpdateProfile:userUpdateProfileReducer,\n  usersDetails:usersDetailsReducer\n});\n/* const reducer = (state,action) =>{\n    return {products:dataShop.products}\n} */\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}