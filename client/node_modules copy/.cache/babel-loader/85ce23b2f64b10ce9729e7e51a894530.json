{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumDelete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment, useContext } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { ModalContext } from \"./modalContext\";\nimport { useForm } from \"react-hook-form\";\nexport default function AlbumDelete(props) {\n  _s();\n\n  const {\n    getAlbum,\n    setGetAlbum\n  } = useContext(MyContext);\n  const {\n    newAlbum,\n    setNewAlbum\n  } = useContext(MyContext);\n  const {\n    register,\n    handleSubmit\n  } = useForm(); // initialize the hook\n\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  let {\n    handleModal\n  } = React.useContext(ModalContext);\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const url = `http://localhost:5000/api/albumup/${id}`;\n        const res = await fetch(url);\n        console.log({\n          url\n        });\n        const album = await res.json();\n        console.log(album);\n        setGetAlbum(album);\n      } catch (err) {}\n    };\n\n    getResult();\n  }, []);\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    /* console.log({ data }); */\n\n    for (let i = 0; i < data.images.length; i++) {\n      formData.append(\"images\", data.images[i]);\n    }\n    /*  formData.append(\"images\", data.images); */\n\n    /*  for (const image of data.image) {\n          formData.append('image[]', image)\n       } */\n\n    /* const data={ ...images, ...newAlbum} */\n\n\n    for (let key in newAlbum) {\n      //creates a loop iterating over arrays\n      formData.append(key, newAlbum[key]);\n    }\n    /* console.log({data}) */\n\n\n    const res = await fetch(`http://localhost:5000/api/albumup/${getAlbum._id}`, {\n      method: \"PUT\",\n      body: formData\n    });\n    const fromApi = await res.json();\n    /* console.log(fromApi); */\n\n    formData.delete(\"images\");\n    setNewAlbum(fromApi.updatedAlbum);\n    /* setNewAlbum({ ...newAlbum, images: fromApi.createdAlbum.images }); */\n  };\n\n  const Delete = url => {//to be implemented\n  };\n\n  const DeleteAlbum = url => {\n    //to be implemented\n    props.history.goBack();\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"VisionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"photos in \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, getAlbum.albumName), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), \" click on one photo to delete\", \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Add photo\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => DeleteAlbum(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Delete Album\")), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"images\",\n    ref: register,\n    required: true,\n    type: \"file\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"soulsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, getAlbum.images && getAlbum.images.map(url => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      className: \"soulsItems\",\n      src: url,\n      key: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    });\n  })));\n}\n\n_s(AlbumDelete, \"F2D0fd5Zl0YUubDPJVR+rC1+m90=\", false, function () {\n  return [useForm, useParams];\n});\n\n_c = AlbumDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumDelete\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumDelete.js"],"names":["React","useEffect","Fragment","useContext","MyContext","useLocation","useParams","ModalContext","useForm","AlbumDelete","props","getAlbum","setGetAlbum","newAlbum","setNewAlbum","register","handleSubmit","id","console","log","handleModal","getResult","url","res","fetch","album","json","err","onSubmit","data","formData","FormData","i","images","length","append","key","_id","method","body","fromApi","delete","updatedAlbum","Delete","DeleteAlbum","history","goBack","textAlign","color","albumName","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BT,UAAU,CAACC,SAAD,CAA5C;AACA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BX,UAAU,CAACC,SAAD,CAA5C;AACA,QAAM;AAAEW,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BR,OAAO,EAA1C,CAHyC,CAGK;;AAC9C,QAAM;AAAES,IAAAA;AAAF,MAASX,SAAS,EAAxB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACA,MAAI;AAAEG,IAAAA;AAAF,MAAkBpB,KAAK,CAACG,UAAN,CAAiBI,YAAjB,CAAtB;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAI,qCAAoCL,EAAG,EAApD;AACA,cAAMM,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAEG,UAAAA;AAAF,SAAZ;AACA,cAAMG,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAApB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACAb,QAAAA,WAAW,CAACa,KAAD,CAAX;AACD,OAPD,CAOE,OAAOE,GAAP,EAAY,CAAE;AACjB,KATD;;AAUAN,IAAAA,SAAS;AACV,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMO,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAL,CAAYC,MAAhC,EAAwCF,CAAC,EAAzC,EAA6C;AAC3CF,MAAAA,QAAQ,CAACK,MAAT,CAAgB,QAAhB,EAA0BN,IAAI,CAACI,MAAL,CAAYD,CAAZ,CAA1B;AACD;AAED;;AACA;AACJ;AACA;;AACI;;;AACA,SAAK,IAAII,GAAT,IAAgBvB,QAAhB,EAA0B;AACxB;AACAiB,MAAAA,QAAQ,CAACK,MAAT,CAAgBC,GAAhB,EAAqBvB,QAAQ,CAACuB,GAAD,CAA7B;AACD;AACD;;;AACA,UAAMb,GAAG,GAAG,MAAMC,KAAK,CACpB,qCAAoCb,QAAQ,CAAC0B,GAAI,EAD7B,EAErB;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,IAAI,EAAET;AAFR,KAFqB,CAAvB;AAOA,UAAMU,OAAO,GAAG,MAAMjB,GAAG,CAACG,IAAJ,EAAtB;AACA;;AACAI,IAAAA,QAAQ,CAACW,MAAT,CAAgB,QAAhB;AACA3B,IAAAA,WAAW,CAAC0B,OAAO,CAACE,YAAT,CAAX;AACA;AACD,GA7BD;;AA8BA,QAAMC,MAAM,GAAIrB,GAAD,IAAS,CACtB;AACD,GAFD;;AAGA,QAAMsB,WAAW,GAAItB,GAAD,IAAS;AAC3B;AACAZ,IAAAA,KAAK,CAACmC,OAAN,CAAcC,MAAd;AACD,GAHD;;AAKA,sBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACY;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCrC,QAAQ,CAACsC,SAAzC,CADZ,EACuE,GADvE,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,mCAEyC,GAFzC,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAM,IAAA,QAAQ,EAAEjC,YAAY,CAACY,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,eAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMgB,WAAW,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAJF,eASE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,GAAG,EAAE7B,QAA1B;AAAoC,IAAA,QAAQ,MAA5C;AAA6C,IAAA,IAAI,EAAC,MAAlD;AAAyD,IAAA,QAAQ,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CAPF,CADH,eAqBG;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACsB,MAAT,IACCtB,QAAQ,CAACsB,MAAT,CAAgBiB,GAAhB,CAAqB5B,GAAD,IAAS;AAC3B,wBACE;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,GAAG,EAAEA,GAHP;AAIE,MAAA,GAAG,EAAEA,GAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAVD,CAFJ,CArBH,CADD;AAwCD;;GApGuBb,W;UAGaD,O,EACpBF,S;;;KAJOG,W","sourcesContent":["import React, { useEffect, Fragment, useContext } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { ModalContext } from \"./modalContext\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function AlbumDelete(props) {\n  const { getAlbum, setGetAlbum } = useContext(MyContext);\n  const { newAlbum, setNewAlbum } = useContext(MyContext);\n  const { register, handleSubmit } = useForm(); // initialize the hook\n  const { id } = useParams();\n  console.log(id);\n  let { handleModal } = React.useContext(ModalContext);\n\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const url = `http://localhost:5000/api/albumup/${id}`;\n        const res = await fetch(url);\n        console.log({ url });\n        const album = await res.json();\n        console.log(album);\n        setGetAlbum(album);\n      } catch (err) {}\n    };\n    getResult();\n  }, []);\n\n  const onSubmit = async (data) => {\n    const formData = new FormData();\n    /* console.log({ data }); */\n    for (let i = 0; i < data.images.length; i++) {\n      formData.append(\"images\", data.images[i]);\n    }\n\n    /*  formData.append(\"images\", data.images); */\n    /*  for (const image of data.image) {\n          formData.append('image[]', image)\n       } */\n    /* const data={ ...images, ...newAlbum} */\n    for (let key in newAlbum) {\n      //creates a loop iterating over arrays\n      formData.append(key, newAlbum[key]);\n    }\n    /* console.log({data}) */\n    const res = await fetch(\n      `http://localhost:5000/api/albumup/${getAlbum._id}`,\n      {\n        method: \"PUT\",\n        body: formData,\n      }\n    );\n    const fromApi = await res.json();\n    /* console.log(fromApi); */\n    formData.delete(\"images\");\n    setNewAlbum(fromApi.updatedAlbum);\n    /* setNewAlbum({ ...newAlbum, images: fromApi.createdAlbum.images }); */\n  };\n  const Delete = (url) => {\n    //to be implemented\n  };\n  const DeleteAlbum = (url) => {\n    //to be implemented\n    props.history.goBack();\n  };\n\n  return (\n   <Fragment>\n      <div style={{ textAlign: \"center\" }}>\n        <h1 className=\"VisionTitle\">\n          photos in <span style={{ color: \"red\" }}>{getAlbum.albumName}</span>{\" \"}\n          <br></br> click on one photo to delete{\" \"}\n        </h1>\n\n        <br></br>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <button type=\"submit\">\n            <h3>Add photo</h3>\n          </button>\n          <button type=\"submit\" onClick={() => DeleteAlbum()}>\n            <h3>Delete Album</h3>\n          </button>\n\n          \n          <input name=\"images\" ref={register} required type=\"file\" multiple />\n        \n        </form>\n      </div>\n      <div className=\"soulsContainer\">\n        {getAlbum.images &&\n          getAlbum.images.map((url) => {\n            return (\n              <img\n                \n                className=\"soulsItems\"\n                src={url}\n                key={url}\n                \n              />\n            );\n          })}\n      </div>\n    </Fragment> \n    \n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}