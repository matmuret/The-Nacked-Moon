{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/CreateAlbum.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport MyContext from \"../Context/MyContext\";\nimport Dropdown from \"./Dropdown.js\";\nimport '../App.scss';\nconst items = [{\n  id: 1,\n  value: 'home'\n}, {\n  id: 2,\n  value: 'fashion'\n}, {\n  id: 3,\n  value: 'outdoors'\n}, {\n  id: 4,\n  value: 'souls'\n}, {\n  id: 5,\n  value: 'projects'\n}];\nexport default function CreateAlbum(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialize the hook\n\n  const {\n    newAlbum,\n    setNewAlbum\n  } = useContext(MyContext);\n\n  const onSubmit = async data => {\n    setNewAlbum(data);\n    props.history.push(`/albumedit/`);\n    /*  if (data.image && data.image.length > 0) {\n       data.image = data.image[0];\n     } */\n\n    /* const formData = new FormData();\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n     const res = await fetch(\"http://localhost:5000/api/photoup\", {\n      method: \"POST\",\n      body: formData,\n    }); */\n\n    /*  const fromApi = await res.json();\n     alert(JSON.stringify(res));\n     console.log(fromApi); */\n  };\n\n  return /*#__PURE__*/React.createElement(Fade, {\n    bottom: true,\n    cascade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"albumName\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), errors.name && \"Name is required.\", /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Category\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"category\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    title: \"Select the Category\",\n    items: items,\n    multiselect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Description\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"description\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), errors.description && \"Description is required.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, \"Add photos\"))))));\n}\n\n_s(CreateAlbum, \"P31b9hOsdJzwmCPXnNCmtzqmJS8=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateAlbum;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAlbum\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/CreateAlbum.js"],"names":["React","useContext","useForm","Fade","MyContext","Dropdown","items","id","value","CreateAlbum","props","register","handleSubmit","errors","newAlbum","setNewAlbum","onSubmit","data","history","push","required","name","description"],"mappings":"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","sourcesContent":["import React, {useContext}from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport MyContext from \"../Context/MyContext\";\nimport Dropdown from \"./Dropdown.js\"; \nimport '../App.scss';\n\nconst items=[\n  {\n  id:1,\n  value:'home'\n},\n{\n  id:2,\n  value:'fashion'\n},\n{\n  id:3,\n  value:'outdoors'\n},\n{\n  id:4,\n  value:'souls'\n},\n{\n  id:5,\n  value:'projects'\n}\n] \n\nexport default function CreateAlbum(props) {\n  const { register, handleSubmit, errors } = useForm(); // initialize the hook\n  const {newAlbum, setNewAlbum } = useContext(MyContext);\n \n  const onSubmit = async (data) => {\n    setNewAlbum(data)\n    props.history.push(`/albumedit/`)\n   /*  if (data.image && data.image.length > 0) {\n      data.image = data.image[0];\n    } */\n    /* const formData = new FormData();\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const res = await fetch(\"http://localhost:5000/api/photoup\", {\n      method: \"POST\",\n      body: formData,\n    }); */\n   /*  const fromApi = await res.json();\n    alert(JSON.stringify(res));\n    console.log(fromApi); */\n  };\n\n  return (\n    <Fade bottom cascade={true}>\n      <div className=\"authContainer\">\n        <div className=\"form2\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <label>\n              <h3>Name</h3>\n            </label>\n            <input type=\"text\" name=\"albumName\" ref={register({ required: true })} />\n            {errors.name && \"Name is required.\"}\n            <label>\n                {/* It has to be defaoult */}\n              <h3>Category</h3>\n            </label>\n            <input type=\"text\" name=\"category\" ref={register} />\n            <div className=\"container\">\n          <Dropdown title=\"Select the Category\" items={items}  multiselect /> \n            </div>\n           \n            <label>\n              <h3>Description</h3>\n            </label>\n            <textarea\n              type=\"text\"\n              name=\"description\"\n              ref={register({ required: true })}\n            />\n            {errors.description && \"Description is required.\"}\n            \n            <br></br>\n            <button type=\"submit\"  >\n              <h3>Add photos</h3>\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}