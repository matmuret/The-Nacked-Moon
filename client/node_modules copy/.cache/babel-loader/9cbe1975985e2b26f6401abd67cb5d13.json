{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/CreateAlbum.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport MyContext from \"../Context/MyContext\";\nexport default function CreateAlbum(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialize the hook\n\n  const {\n    newAlbum,\n    setNewAlbum\n  } = useContext(MyContext);\n\n  const onSubmit = async data => {\n    /*  if (data.image && data.image.length > 0) {\n      data.image = data.image[0];\n    } */\n    const formData = new FormData();\n\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData\n    });\n    const album = await res.json();\n    setNewAlbum(album);\n    alert('Successfully Submitted!');\n    console.log(album);\n  };\n\n  const addPhoto = () => {\n    props.history.push(`/albumedit`); // ?name=${newAlbum.createAlbum.albumName}\n  };\n\n  return /*#__PURE__*/React.createElement(Fade, {\n    bottom: true,\n    cascade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"authContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"albumName\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), errors.name && \"Name is required.\", /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Category\")), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"category\",\n    name: \"category\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"home\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fashion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"fashion\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"outdoors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"outdoors\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"souls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"souls\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"projects\")), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Description\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"description\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), errors.description && \"Description is required.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addPhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Add photos\"))))));\n}\n\n_s(CreateAlbum, \"guPrgpShFEFOLKctBSPCvvJtmQ8=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateAlbum;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAlbum\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/CreateAlbum.js"],"names":["React","useContext","useForm","Fade","MyContext","CreateAlbum","props","register","handleSubmit","errors","newAlbum","setNewAlbum","onSubmit","data","formData","FormData","key","append","res","fetch","method","body","album","json","alert","console","log","addPhoto","history","push","required","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAIA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACzC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCP,OAAO,EAAlD,CADyC,CACa;;AACtD,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BV,UAAU,CAACG,SAAD,CAA5C;;AAEA,QAAMQ,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAE/B;AACJ;AACA;AACI,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,SAAK,IAAIC,GAAT,IAAgBH,IAAhB,EAAsB;AACpBC,MAAAA,QAAQ,CAACG,MAAT,CAAgBD,GAAhB,EAAqBH,IAAI,CAACG,GAAD,CAAzB;AACD;;AAED,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAC3DC,MAAAA,MAAM,EAAE,MADmD;AAE3DC,MAAAA,IAAI,EAAEP;AAFqD,KAAtC,CAAvB;AAKA,UAAMQ,KAAK,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAApB;AACAZ,IAAAA,WAAW,CAACW,KAAD,CAAX;AACAE,IAAAA,KAAK,CAAC,yBAAD,CAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,GAnBD;;AAqBA,QAAMK,QAAQ,GAAG,MAAI;AAEpBrB,IAAAA,KAAK,CAACsB,OAAN,CAAcC,IAAd,CAAoB,YAApB,EAFoB,CAEY;AAChC,GAHD;;AAKA,sBACE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,OAAO,EAAE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAErB,YAAY,CAACI,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,eAIE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,GAAG,EAAEL,QAAQ,CAAC;AAAEuB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASGrB,MAAM,CAACsB,IAAP,IAAe,mBATlB,eAUE;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAVF,eAaE;AAAQ,IAAA,EAAE,EAAC,UAAX;AAAsB,IAAA,IAAI,EAAC,UAA3B;AAAsC,IAAA,GAAG,EAAExB,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CAbF,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CArBF,eAwBE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,GAAG,EAAEA,QAAQ,CAAC;AAAEuB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,EA6BGrB,MAAM,CAACuB,WAAP,IAAsB,0BA7BzB,eA+BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,eAgCE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAhCF,eAmCE;AAAQ,IAAA,OAAO,EAAGL,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAnCF,CADF,CADF,CADF,CADF;AA+CD;;GA7EuBtB,W;UACqBH,O;;;KADrBG,W","sourcesContent":["import React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport MyContext from \"../Context/MyContext\";\n\n\n\nexport default function CreateAlbum(props) {\n  const { register, handleSubmit, errors } = useForm(); // initialize the hook\n  const { newAlbum, setNewAlbum } = useContext(MyContext);\n\n  const onSubmit = async (data) => {\n   \n    /*  if (data.image && data.image.length > 0) {\n      data.image = data.image[0];\n    } */\n    const formData = new FormData();\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    const album = await res.json();\n    setNewAlbum(album);\n    alert('Successfully Submitted!')\n    console.log(album)\n  };\n\n  const addPhoto = ()=>{\n    \n   props.history.push(`/albumedit`)// ?name=${newAlbum.createAlbum.albumName}\n  }\n\n  return (\n    <Fade bottom cascade={true}>\n      <div className=\"authContainer\">\n        <div className=\"form2\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <label>\n              <h3>Name</h3>\n            </label>\n            <input\n              type=\"text\"\n              name=\"albumName\"\n              ref={register({ required: true })}\n            />\n            {errors.name && \"Name is required.\"}\n            <label htmlFor=\"category\">\n              <h3>Category</h3>\n            </label>\n            <select id=\"category\" name=\"category\" ref={register}>\n              <option value=\"home\">home</option>\n              <option value=\"fashion\">fashion</option>\n              <option value=\"outdoors\">outdoors</option>\n              <option value=\"souls\">souls</option>\n              <option value=\"projects\">projects</option>\n            </select>\n\n            <label>\n              <h3>Description</h3>\n            </label>\n            <textarea\n              type=\"text\"\n              name=\"description\"\n              ref={register({ required: true })}\n            />\n            {errors.description && \"Description is required.\"}\n\n            <br></br>\n            <button type=\"submit\">\n              <h3>Submit</h3>\n            </button>\n            <button onClick= {addPhoto}>\n              <h3>Add photos</h3>\n            </button>\n          </form>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}