{"ast":null,"code":"import Axios from \"axios\";\nimport { getState } from \"../../node_modules/react-model/src/index\";\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL } from \"../Constants/productConstant\";\nAxios.defaults.baseURL = \"http://localhost:5000/\";\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    console.log(\"fetching products\");\n    console.log(Axios.defaults.baseURL);\n    const {\n      data\n    } = await Axios.get(\"/api/Shop\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    console.log(Axios.defaults.baseURL);\n    const {\n      data\n    } = await Axios.get(`/api/Shop/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: //check if response and message exist then return the message otherwise return a general error message\n      error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  }); //get tocken of the user from userSignIn from getState\n\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState;\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/shop/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: //check if response and message exist then return the message otherwise return a general error message\n      error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Actions/productActions.js"],"names":["Axios","getState","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","defaults","baseURL","listProducts","dispatch","type","console","log","data","get","payload","error","message","detailsProduct","productId","response","updateProduct","product","userSignin","userInfo","put","_id","headers","Authorization","token"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,0CAAzB;AACA,SACEC,oBADF,EAEEC,uBAFF,EAGEC,uBAHF,EAIEC,iBAJF,EAKEC,oBALF,EAMEC,oBANF,EAOEC,sBAPF,EAQEC,sBARF,EASEC,mBATF,QAUO,8BAVP;AAYAV,KAAK,CAACW,QAAN,CAAeC,OAAf,GAAyB,wBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAET;AADC,GAAD,CAAR;;AAGA,MAAI;AACFU,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACW,QAAN,CAAeC,OAA3B;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,GAAN,CAAU,WAAV,CAAvB;AACAL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,oBAAR;AAA8Ba,MAAAA,OAAO,EAAEF;AAAvC,KAAD,CAAR;AACD,GALD,CAKE,OAAOG,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,iBAAR;AAA2Be,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA1C,KAAD,CAAR;AACD;AACF,CAZM;AAaP,OAAO,MAAMC,cAAc,GAAIC,SAAD,IAAe,MAAOV,QAAP,IAAoB;AAC/DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEZ,uBAAR;AAAiCiB,IAAAA,OAAO,EAAEI;AAA1C,GAAD,CAAR;;AAEA,MAAI;AACFR,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACW,QAAN,CAAeC,OAA3B;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMlB,KAAK,CAACmB,GAAN,CAAW,aAAYK,SAAU,EAAjC,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,uBAAR;AAAiCgB,MAAAA,OAAO,EAAEF;AAA1C,KAAD,CAAR;AACD,GALD,CAKE,OAAOG,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEb,oBADC;AAEPkB,MAAAA,OAAO,EACL;AACAC,MAAAA,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;AANL,KAAD,CAAR;AAQD;AACF,CAnBM;AAoBP,OAAO,MAAMI,aAAa,GAAIC,OAAD,IAAa,OAAOb,QAAP,EAAiBb,QAAjB,KAA8B;AACtEa,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP,sBADC;AAEPY,IAAAA,OAAO,EAAEO;AAFF,GAAD,CAAR,CADsE,CAKtE;;AACA,QAAM;AACJC,IAAAA,UAAU,EAAE;AAAEC,MAAAA;AAAF;AADR,MAEF5B,QAFJ;;AAGA,MAAI;AACF,UAAK;AAACiB,MAAAA;AAAD,QAAO,MAAMlB,KAAK,CAAC8B,GAAN,CAAW,aAAYH,OAAO,CAACI,GAAI,EAAnC,EAAsCJ,OAAtC,EAA+C;AAC/DK,MAAAA,OAAO,EAAC;AAACC,QAAAA,aAAa,EAAE,UAASJ,QAAQ,CAACK,KAAM;AAAxC;AADuD,KAA/C,CAAlB;AAGApB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,sBAAP;AAA+BW,MAAAA,OAAO,EAACF;AAAvC,KAAD,CAAR;AACD,GALD,CAKE,OAAOG,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,mBADC;AAEPU,MAAAA,OAAO,EACL;AACAC,MAAAA,KAAK,CAACI,QAAN,IAAkBJ,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACI,QAAN,CAAeP,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;AANL,KAAD,CAAR;AAQD;AACF,CAxBM","sourcesContent":["import Axios from \"axios\";\nimport { getState } from \"../../node_modules/react-model/src/index\";\nimport {\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n} from \"../Constants/productConstant\";\n\nAxios.defaults.baseURL = \"http://localhost:5000/\";\n\nexport const listProducts = () => async (dispatch) => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST,\n  });\n  try {\n    console.log(\"fetching products\");\n    console.log(Axios.defaults.baseURL);\n    const { data } = await Axios.get(\"/api/Shop\");\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n  }\n};\nexport const detailsProduct = (productId) => async (dispatch) => {\n  dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n\n  try {\n    console.log(Axios.defaults.baseURL);\n    const { data } = await Axios.get(`/api/Shop/${productId}`);\n\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        //check if response and message exist then return the message otherwise return a general error message\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product,\n  });\n  //get tocken of the user from userSignIn from getState\n  const {\n    userSignin: { userInfo },\n  } = getState;\n  try {\n    const{data}=await Axios.put(`/api/shop/${product._id}`, product, {\n      headers:{Authorization:`Bearer ${userInfo.token}`},\n    })\n    dispatch({type: PRODUCT_UPDATE_SUCCESS, payload:data})\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        //check if response and message exist then return the message otherwise return a general error message\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}