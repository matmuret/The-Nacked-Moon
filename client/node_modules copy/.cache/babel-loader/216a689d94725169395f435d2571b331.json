{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useForm } from \"react-hook-form\";\nexport default function Category(props) {\n  _s();\n\n  const {\n    getPhotos\n  } = useContext(MyContext);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialize the hook\n\n  const onSubmit = async data => {\n    if (data.image && data.image.length > 0) {\n      data.image = data.image[0];\n    }\n\n    const formData = new FormData();\n\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const res = await fetch(\"http://localhost:5000/api/Shop\", {\n      method: \"POST\",\n      body: formData\n    });\n    const fromApi = await res.json();\n    alert(JSON.stringify(res));\n    console.log(fromApi);\n  };\n\n  const Delete = url => {//to be implemented\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"soulsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"VisionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"photo in \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 42\n    }\n  }, \"Album\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 87\n    }\n  }), \" click on one photo to delete \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"image\",\n    ref: register,\n    required: true,\n    type: \"file\",\n    name: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), errors.image && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 30\n    }\n  }, errors.image.message), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }\n  }, \"Add photo\")), getPhotos.map(item => {\n    if (item.width_m <= 357) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        onClick: () => Delete(item.url_l),\n        classname: \"soulsItems\",\n        src: item.url_m,\n        key: item.id,\n        image: item.url_l,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      });\n    }\n  })));\n}\n\n_s(Category, \"3v+kkO25w2pfelbDNhGh1IJQ3P4=\", false, function () {\n  return [useForm];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumEdit.js"],"names":["React","Fragment","useContext","MyContext","useForm","Category","props","getPhotos","register","handleSubmit","errors","onSubmit","data","image","length","formData","FormData","key","append","res","fetch","method","body","fromApi","json","alert","JSON","stringify","console","log","Delete","url","color","message","map","item","width_m","url_l","url_m","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useForm } from \"react-hook-form\";\n\n\n\nexport default function Category(props) {\n  const { getPhotos } = useContext(MyContext);\n  const { register, handleSubmit, errors } = useForm(); // initialize the hook\n  const onSubmit = async (data) => {\n    if (data.image && data.image.length > 0) {\n      data.image = data.image[0];\n    }\n    const formData = new FormData();\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const res = await fetch(\"http://localhost:5000/api/Shop\", {\n      method: \"POST\",\n      body: formData,\n    });\n    const fromApi = await res.json();\n    alert(JSON.stringify(res));\n    console.log(fromApi);\n  };\n  const Delete = (url) => {\n    //to be implemented\n  };\n\n \n  return (\n    \n    <Fragment>\n    <div className=\"soulsContainer\">\n    <h1 className=\"VisionTitle\">photo in <span style={{ color: \"red\" }} >Album</span> <br></br> click on one photo to delete </h1>\n    <input\n              name=\"image\"\n              ref={register}\n              required\n              type=\"file\"\n              name=\"image\"\n            />\n            {errors.image && <p>{errors.image.message}</p>}\n            <br></br>\n    <button type=\"submit\"><h3>Add photo</h3></button>\n      {getPhotos.map((item) => {\n        if (item.width_m <= 357) {\n          return (\n            <img\n              onClick={() => Delete(item.url_l)}\n              classname=\"soulsItems\"\n              src={item.url_m}\n              key={item.id}\n              image={item.url_l}\n            />\n          );\n        }\n      })}\n    </div>\n  </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}