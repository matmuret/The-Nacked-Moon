{"ast":null,"code":"import { USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../Constants/userConstants\";\nimport Axios from 'axios';\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/Re\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: //check if response and message exist then return the message otherwise return a general error message\n      error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/SignIn\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: //check if response and message exist then return the message otherwise return a general error message\n      error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Actions/signAction.js"],"names":["USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","Axios","register","name","email","password","dispatch","type","USER_REGISTER_REQUEST","payload","data","post","USER_REGISTER_SUCCESS","localStorage","setItem","JSON","stringify","error","USER_REGISTER_FAIL","response","message","signin","signout","removeItem"],"mappings":"AAAA,SACEA,gBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,YAJF,QAKO,4BALP;AAMA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AACrEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEC,qBAAR;AAA+BC,IAAAA,OAAO,EAAE;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAxC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACU,IAAN,CAAW,eAAX,EAA4B;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA5B,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEK,qBAAR;AAA+BH,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACD,GAJD,CAIE,OAAOO,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEW,kBADC;AAEPT,MAAAA,OAAO,EACL;AACAQ,MAAAA,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,OADxB,GAEIH,KAAK,CAACG;AANL,KAAD,CAAR;AAQD;AACF,CAhBM;AAiBP,OAAO,MAAMC,MAAM,GAAG,CAACjB,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET,mBAAR;AAA6BW,IAAAA,OAAO,EAAE;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAtC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACU,IAAN,CAAW,mBAAX,EAAgC;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,mBAAR;AAA6BU,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AACD,GAJD,CAIE,OAAOO,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,gBADC;AAEPY,MAAAA,OAAO,EACL;AACAQ,MAAAA,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,OAAtC,GACIH,KAAK,CAACE,QAAN,CAAeT,IAAf,CAAoBU,OADxB,GAEIH,KAAK,CAACG;AANL,KAAD,CAAR;AAQD;AACF,CAhBM;AAiBP,OAAO,MAAME,OAAO,GAAC,MAAKhB,QAAD,IAAY;AACjCO,EAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACAV,EAAAA,YAAY,CAACU,UAAb,CAAwB,WAAxB;AACAjB,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACP;AAAN,GAAD,CAAR;AACH,CAJM","sourcesContent":["import {\n  USER_SIGNIN_FAIL,\n  USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  USER_SIGNOUT,\n} from \"../Constants/userConstants\";\nimport Axios from 'axios'\n\nexport const register = (name, email, password) => async (dispatch) => {\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/Re\", { email, password });\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        //check if response and message exist then return the message otherwise return a general error message\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const signin = (email, password) => async (dispatch) => {\n  dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/SignIn\", { email, password });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload:\n        //check if response and message exist then return the message otherwise return a general error message\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const signout=()=>(dispatch)=>{\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    dispatch({type:USER_SIGNOUT});\n}\n"]},"metadata":{},"sourceType":"module"}