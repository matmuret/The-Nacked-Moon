{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar util_1 = require(\"./util\");\n\nvar nav = typeof navigator === 'object' ? navigator : undefined;\nvar isBatteryApiSupported = nav && typeof nav.getBattery === 'function';\n\nfunction useBatteryMock() {\n  return {\n    isSupported: false\n  };\n}\n\nfunction useBattery() {\n  var _a = react_1.useState({\n    isSupported: true,\n    fetched: false\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  react_1.useEffect(function () {\n    var isMounted = true;\n    var battery = null;\n\n    var handleChange = function handleChange() {\n      if (!isMounted || !battery) {\n        return;\n      }\n\n      var newState = {\n        isSupported: true,\n        fetched: true,\n        level: battery.level,\n        charging: battery.charging,\n        dischargingTime: battery.dischargingTime,\n        chargingTime: battery.chargingTime\n      };\n      !util_1.isDeepEqual(state, newState) && setState(newState);\n    };\n\n    nav.getBattery().then(function (bat) {\n      if (!isMounted) {\n        return;\n      }\n\n      battery = bat;\n      util_1.on(battery, 'chargingchange', handleChange);\n      util_1.on(battery, 'chargingtimechange', handleChange);\n      util_1.on(battery, 'dischargingtimechange', handleChange);\n      util_1.on(battery, 'levelchange', handleChange);\n      handleChange();\n    });\n    return function () {\n      isMounted = false;\n\n      if (battery) {\n        util_1.off(battery, 'chargingchange', handleChange);\n        util_1.off(battery, 'chargingtimechange', handleChange);\n        util_1.off(battery, 'dischargingtimechange', handleChange);\n        util_1.off(battery, 'levelchange', handleChange);\n      }\n    };\n  }, []);\n  return state;\n}\n\nexports.default = isBatteryApiSupported ? useBattery : useBatteryMock;","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/node_modules/react-use/lib/useBattery.js"],"names":["Object","defineProperty","exports","value","react_1","require","util_1","nav","navigator","undefined","isBatteryApiSupported","getBattery","useBatteryMock","isSupported","useBattery","_a","useState","fetched","state","setState","useEffect","isMounted","battery","handleChange","newState","level","charging","dischargingTime","chargingTime","isDeepEqual","then","bat","on","off","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIE,GAAG,GAAG,OAAOC,SAAP,KAAqB,QAArB,GAAgCA,SAAhC,GAA4CC,SAAtD;AACA,IAAIC,qBAAqB,GAAGH,GAAG,IAAI,OAAOA,GAAG,CAACI,UAAX,KAA0B,UAA7D;;AACA,SAASC,cAAT,GAA0B;AACtB,SAAO;AAAEC,IAAAA,WAAW,EAAE;AAAf,GAAP;AACH;;AACD,SAASC,UAAT,GAAsB;AAClB,MAAIC,EAAE,GAAGX,OAAO,CAACY,QAAR,CAAiB;AAAEH,IAAAA,WAAW,EAAE,IAAf;AAAqBI,IAAAA,OAAO,EAAE;AAA9B,GAAjB,CAAT;AAAA,MAAkEC,KAAK,GAAGH,EAAE,CAAC,CAAD,CAA5E;AAAA,MAAiFI,QAAQ,GAAGJ,EAAE,CAAC,CAAD,CAA9F;;AACAX,EAAAA,OAAO,CAACgB,SAAR,CAAkB,YAAY;AAC1B,QAAIC,SAAS,GAAG,IAAhB;AACA,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAIC,YAAY,GAAG,SAAfA,YAAe,GAAY;AAC3B,UAAI,CAACF,SAAD,IAAc,CAACC,OAAnB,EAA4B;AACxB;AACH;;AACD,UAAIE,QAAQ,GAAG;AACXX,QAAAA,WAAW,EAAE,IADF;AAEXI,QAAAA,OAAO,EAAE,IAFE;AAGXQ,QAAAA,KAAK,EAAEH,OAAO,CAACG,KAHJ;AAIXC,QAAAA,QAAQ,EAAEJ,OAAO,CAACI,QAJP;AAKXC,QAAAA,eAAe,EAAEL,OAAO,CAACK,eALd;AAMXC,QAAAA,YAAY,EAAEN,OAAO,CAACM;AANX,OAAf;AAQA,OAACtB,MAAM,CAACuB,WAAP,CAAmBX,KAAnB,EAA0BM,QAA1B,CAAD,IAAwCL,QAAQ,CAACK,QAAD,CAAhD;AACH,KAbD;;AAcAjB,IAAAA,GAAG,CAACI,UAAJ,GAAiBmB,IAAjB,CAAsB,UAAUC,GAAV,EAAe;AACjC,UAAI,CAACV,SAAL,EAAgB;AACZ;AACH;;AACDC,MAAAA,OAAO,GAAGS,GAAV;AACAzB,MAAAA,MAAM,CAAC0B,EAAP,CAAUV,OAAV,EAAmB,gBAAnB,EAAqCC,YAArC;AACAjB,MAAAA,MAAM,CAAC0B,EAAP,CAAUV,OAAV,EAAmB,oBAAnB,EAAyCC,YAAzC;AACAjB,MAAAA,MAAM,CAAC0B,EAAP,CAAUV,OAAV,EAAmB,uBAAnB,EAA4CC,YAA5C;AACAjB,MAAAA,MAAM,CAAC0B,EAAP,CAAUV,OAAV,EAAmB,aAAnB,EAAkCC,YAAlC;AACAA,MAAAA,YAAY;AACf,KAVD;AAWA,WAAO,YAAY;AACfF,MAAAA,SAAS,GAAG,KAAZ;;AACA,UAAIC,OAAJ,EAAa;AACThB,QAAAA,MAAM,CAAC2B,GAAP,CAAWX,OAAX,EAAoB,gBAApB,EAAsCC,YAAtC;AACAjB,QAAAA,MAAM,CAAC2B,GAAP,CAAWX,OAAX,EAAoB,oBAApB,EAA0CC,YAA1C;AACAjB,QAAAA,MAAM,CAAC2B,GAAP,CAAWX,OAAX,EAAoB,uBAApB,EAA6CC,YAA7C;AACAjB,QAAAA,MAAM,CAAC2B,GAAP,CAAWX,OAAX,EAAoB,aAApB,EAAmCC,YAAnC;AACH;AACJ,KARD;AASH,GArCD,EAqCG,EArCH;AAsCA,SAAOL,KAAP;AACH;;AACDhB,OAAO,CAACgC,OAAR,GAAkBxB,qBAAqB,GAAGI,UAAH,GAAgBF,cAAvD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar util_1 = require(\"./util\");\nvar nav = typeof navigator === 'object' ? navigator : undefined;\nvar isBatteryApiSupported = nav && typeof nav.getBattery === 'function';\nfunction useBatteryMock() {\n    return { isSupported: false };\n}\nfunction useBattery() {\n    var _a = react_1.useState({ isSupported: true, fetched: false }), state = _a[0], setState = _a[1];\n    react_1.useEffect(function () {\n        var isMounted = true;\n        var battery = null;\n        var handleChange = function () {\n            if (!isMounted || !battery) {\n                return;\n            }\n            var newState = {\n                isSupported: true,\n                fetched: true,\n                level: battery.level,\n                charging: battery.charging,\n                dischargingTime: battery.dischargingTime,\n                chargingTime: battery.chargingTime,\n            };\n            !util_1.isDeepEqual(state, newState) && setState(newState);\n        };\n        nav.getBattery().then(function (bat) {\n            if (!isMounted) {\n                return;\n            }\n            battery = bat;\n            util_1.on(battery, 'chargingchange', handleChange);\n            util_1.on(battery, 'chargingtimechange', handleChange);\n            util_1.on(battery, 'dischargingtimechange', handleChange);\n            util_1.on(battery, 'levelchange', handleChange);\n            handleChange();\n        });\n        return function () {\n            isMounted = false;\n            if (battery) {\n                util_1.off(battery, 'chargingchange', handleChange);\n                util_1.off(battery, 'chargingtimechange', handleChange);\n                util_1.off(battery, 'dischargingtimechange', handleChange);\n                util_1.off(battery, 'levelchange', handleChange);\n            }\n        };\n    }, []);\n    return state;\n}\nexports.default = isBatteryApiSupported ? useBattery : useBatteryMock;\n"]},"metadata":{},"sourceType":"script"}