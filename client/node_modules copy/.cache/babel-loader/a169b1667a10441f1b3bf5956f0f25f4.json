{"ast":null,"code":"import _regeneratorRuntime from\"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{Fragment,useContext,useEffect}from'react';import MyContext from'../Context/MyContext';import{useForm}from'react-hook-form';import{useHistory,useParams}from'react-router-dom';export default function AlbumEdit(props){var _useContext=useContext(MyContext),newAlbum=_useContext.newAlbum,setNewAlbum=_useContext.setNewAlbum;var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit;// initialize the hook\nvar _useParams=useParams(),id=_useParams.id;var history=useHistory();/* console.log({ newAlbum }); */ // get the album info first\nuseEffect(function(){var getResult=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,albums;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:5000/api/albumup/\".concat(id));case 3:res=_context.sent;_context.next=6;return res.json();case 6:albums=_context.sent;console.log(albums);setNewAlbum(albums);_context.next=13;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function getResult(){return _ref.apply(this,arguments);};}();getResult();},[]);var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){var formData,i,key,res,fromApi;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:formData=new FormData();/* console.log({ data }); */for(i=0;i<data.images.length;i++){formData.append('images',data.images[i]);}/*  formData.append(\"images\", data.images); */ /*  for (const image of data.image) {\n      formData.append('image[]', image)\n   } */ /* const data={ ...images, ...newAlbum} */for(key in newAlbum){//creates a loop iterating over arrays\nformData.append(key,newAlbum[key]);}/* console.log({data}) */_context2.next=5;return fetch(\"http://localhost:5000/api/albumup/\".concat(newAlbum._id),{method:'PUT',body:formData});case 5:res=_context2.sent;_context2.next=8;return res.json();case 8:fromApi=_context2.sent;/* console.log(fromApi); */formData.delete('images');setNewAlbum(fromApi.updatedAlbum);/* setNewAlbum({ ...newAlbum, images: fromApi.createdAlbum.images }); */case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();var Delete=function Delete(url){//to be implemented\n};var DeleteAlbum=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e){var deleteMethod,url,res,result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:e.preventDefault();deleteMethod={method:'DELETE',// Method itself\nheaders:{'Content-type':'application/json'// Indicates the content\n}// No need to have body, because we don't send nothing to the server.\n};// Make the HTTP Delete call using fetch api\n_context3.prev=2;url=\"http://localhost:5000/api/albumup/delete/\".concat(id);_context3.next=6;return fetch(url,deleteMethod);case 6:res=_context3.sent;console.log({url:url});_context3.next=10;return res.json();case 10:result=_context3.sent;console.log(result);history.goBack();_context3.next=17;break;case 15:_context3.prev=15;_context3.t0=_context3[\"catch\"](2);case 17:case\"end\":return _context3.stop();}}},_callee3,null,[[2,15]]);}));return function DeleteAlbum(_x2){return _ref3.apply(this,arguments);};}();/*  }; */console.log('rerendering',newAlbum);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:'center'}},/*#__PURE__*/React.createElement(\"h1\",{className:\"VisionTitle\"},\"photos in \",/*#__PURE__*/React.createElement(\"span\",{style:{color:'red'}},newAlbum.albumName),\" \",/*#__PURE__*/React.createElement(\"br\",null),' ',\"click on one photo to delete\",' '),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Add photo\")),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",onClick:function onClick(e){return DeleteAlbum(e);}},/*#__PURE__*/React.createElement(\"h3\",null,\"Delete Album\")),/*#__PURE__*/React.createElement(\"input\",{name:\"images\",ref:register,required:true,type:\"file\",multiple:true}))),/*#__PURE__*/React.createElement(\"div\",{className:\"soulsContainer\"},newAlbum.images&&newAlbum.images.map(function(url){return/*#__PURE__*/React.createElement(\"img\",{/* onClick={() => Delete(item)} */className:\"soulsItems\",src:url,key:url/* image={item.url_l} */});})));}","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumEdit.js"],"names":["React","Fragment","useContext","useEffect","MyContext","useForm","useHistory","useParams","AlbumEdit","props","newAlbum","setNewAlbum","register","handleSubmit","id","history","getResult","fetch","res","json","albums","console","log","onSubmit","data","formData","FormData","i","images","length","append","key","_id","method","body","fromApi","delete","updatedAlbum","Delete","url","DeleteAlbum","e","preventDefault","deleteMethod","headers","result","goBack","textAlign","color","albumName","map"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport MyContext from '../Context/MyContext';\nimport { useForm } from 'react-hook-form';\nimport { useHistory, useParams } from 'react-router-dom';\n\nexport default function AlbumEdit(props) {\n  const { newAlbum, setNewAlbum } = useContext(MyContext);\n  const { register, handleSubmit } = useForm(); // initialize the hook\n  const { id } = useParams();\n  const history = useHistory();\n  /* console.log({ newAlbum }); */\n\n  // get the album info first\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/api/albumup/${id}`);\n        const albums = await res.json();\n        console.log(albums);\n        setNewAlbum(albums);\n      } catch (err) {}\n    };\n    getResult();\n  }, []);\n\n  const onSubmit = async (data) => {\n    const formData = new FormData();\n    /* console.log({ data }); */\n    for (let i = 0; i < data.images.length; i++) {\n      formData.append('images', data.images[i]);\n    }\n\n    /*  formData.append(\"images\", data.images); */\n    /*  for (const image of data.image) {\n      formData.append('image[]', image)\n   } */\n    /* const data={ ...images, ...newAlbum} */\n    for (let key in newAlbum) {\n      //creates a loop iterating over arrays\n      formData.append(key, newAlbum[key]);\n    }\n    /* console.log({data}) */\n    const res = await fetch(`http://localhost:5000/api/albumup/${newAlbum._id}`, {\n      method: 'PUT',\n      body: formData,\n    });\n    const fromApi = await res.json();\n    /* console.log(fromApi); */\n    formData.delete('images');\n    setNewAlbum(fromApi.updatedAlbum);\n    /* setNewAlbum({ ...newAlbum, images: fromApi.createdAlbum.images }); */\n  };\n\n  const Delete = (url) => {\n    //to be implemented\n  };\n\n  const DeleteAlbum = async (e) => {\n      e.preventDefault();\n      const deleteMethod = {\n        method: 'DELETE', // Method itself\n        headers: {\n          'Content-type': 'application/json', // Indicates the content\n        },\n        // No need to have body, because we don't send nothing to the server.\n      };\n      // Make the HTTP Delete call using fetch api\n      try {\n        const url = `http://localhost:5000/api/albumup/delete/${id}`;\n        const res = await fetch(url, deleteMethod);\n        console.log({ url });\n        const result = await res.json();\n        console.log(result);\n        history.goBack();\n      } catch (err) {}\n    };\n /*  }; */\n  console.log('rerendering', newAlbum);\n  return (\n    <Fragment>\n      <div style={{ textAlign: 'center' }}>\n        <h1 className='VisionTitle'>\n          photos in <span style={{ color: 'red' }}>{newAlbum.albumName}</span> <br></br>{' '}\n          click on one photo to delete{' '}\n        </h1>\n\n        <br></br>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <button type='submit'>\n            <h3>Add photo</h3>\n          </button>\n          <button type='submit' onClick={(e) => DeleteAlbum(e)}>\n            <h3>Delete Album</h3>\n          </button>\n\n          {/* <div style={{margin:\"auto\", }}> */}\n          <input name='images' ref={register} required type='file' multiple />\n          {/* </div> */}\n        </form>\n      </div>\n      <div className='soulsContainer'>\n        {newAlbum.images &&\n          newAlbum.images.map((url) => {\n            return (\n              <img\n                /* onClick={() => Delete(item)} */\n                className='soulsItems'\n                src={url}\n                key={url}\n                /* image={item.url_l} */\n              />\n            );\n          })}\n      </div>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}