{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useForm } from \"react-hook-form\";\nexport default function AlbumEdit(props) {\n  _s();\n\n  const {\n    newAlbum,\n    setGetPhotos,\n    setNewAlbum,\n    getPhotos\n  } = useContext(MyContext);\n  const {\n    register,\n    handleSubmit\n  } = useForm(); // initialize the hook\n\n  console.log({\n    newAlbum\n  });\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    console.log({\n      data\n    });\n\n    for (let i = 0; i < data.images.length; i++) {\n      formData.append(\"images\", data.images[i]);\n    }\n    /*  formData.append(\"images\", data.images); */\n\n    /*  for (const image of data.image) {\n      formData.append('image[]', image)\n    } */\n\n    /* const data={ ...images, ...newAlbum} */\n\n\n    for (let key in newAlbum) {\n      formData.append(key, newAlbum[key]);\n    }\n    /* console.log({data}) */\n\n\n    const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData\n    });\n    const fromApi = await res.json();\n    console.log(fromApi);\n    debugger;\n    setNewAlbum({ ...newAlbum,\n      images: fromApi.newAlbum.createdAlbum.images\n    });\n  };\n\n  const Delete = url => {//to be implemented\n  };\n\n  const DeleteAlbum = url => {\n    //to be implemented\n    props.history.goBack();\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"VisionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"photos in \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, newAlbum.albumName), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 80\n    }\n  }), \" click on one photo to delete\", \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Add photo\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => DeleteAlbum(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Delete Album\")), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"images\",\n    ref: register,\n    required: true,\n    type: \"file\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"soulsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, newAlbum.images && newAlbum.images.map(url => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      /* onClick={() => Delete(item)} */\n      classname: \"soulsItems\",\n      src: url,\n      key: url\n      /* image={item.url_l} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    });\n    /* } */\n  })));\n}\n\n_s(AlbumEdit, \"ViaaEVvKLvaNxjvOvUWwXxWo8Vo=\", false, function () {\n  return [useForm];\n});\n\n_c = AlbumEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumEdit\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumEdit.js"],"names":["React","Fragment","useContext","MyContext","useForm","AlbumEdit","props","newAlbum","setGetPhotos","setNewAlbum","getPhotos","register","handleSubmit","console","log","onSubmit","data","formData","FormData","i","images","length","append","key","res","fetch","method","body","fromApi","json","createdAlbum","Delete","url","DeleteAlbum","history","goBack","textAlign","color","albumName","map"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function AlbumEdit(props) {\n  const { newAlbum, setGetPhotos, setNewAlbum, getPhotos } = useContext(\n    MyContext\n  );\n  const { register, handleSubmit } = useForm(); // initialize the hook\n\n  console.log({ newAlbum });\n\n  const onSubmit = async (data) => {\n    const formData = new FormData();\n    console.log({ data });\n    for (let i = 0; i < data.images.length; i++) {\n      formData.append(\"images\", data.images[i]);\n    }\n\n    /*  formData.append(\"images\", data.images); */\n    /*  for (const image of data.image) {\n      formData.append('image[]', image)\n   } */\n    /* const data={ ...images, ...newAlbum} */\n    for (let key in newAlbum) {\n      formData.append(key, newAlbum[key]);\n    }\n    /* console.log({data}) */\n    const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData,\n    });\n    const fromApi = await res.json();\n    console.log(fromApi);\n    debugger\n\n    setNewAlbum({ ...newAlbum, images: fromApi.newAlbum.createdAlbum.images });\n  };\n  const Delete = (url) => {\n    //to be implemented\n  };\n  const DeleteAlbum = (url) => {\n    //to be implemented\n    props.history.goBack();\n  };\n\n  return (\n    <Fragment>\n      <div style={{ textAlign: \"center\" }}>\n        <h1 className=\"VisionTitle\">\n          photos in <span style={{ color: \"red\" }}>{newAlbum.albumName}</span> <br></br> click\n          on one photo to delete{\" \"}\n        </h1>\n\n        <br></br>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <button type=\"submit\">\n            <h3>Add photo</h3>\n          </button>\n          <button type=\"submit\" onClick={() => DeleteAlbum()}>\n            <h3>Delete Album</h3>\n          </button>\n\n          {/* <div style={{margin:\"auto\", }}> */}\n          <input name=\"images\" ref={register} required type=\"file\" multiple />\n          {/* </div> */}\n        </form>\n      </div>\n      <div className=\"soulsContainer\">\n        {newAlbum.images &&\n          newAlbum.images.map((url) => {\n            return (\n              <img\n                /* onClick={() => Delete(item)} */\n                classname=\"soulsItems\"\n                src={url}\n                key={url}\n                /* image={item.url_l} */\n              />\n            );\n            /* } */\n          })}\n      </div>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}