{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar React = tslib_1.__importStar(require(\"react\"));\n\nvar react_1 = require(\"react\");\n\nvar useSetState_1 = tslib_1.__importDefault(require(\"../useSetState\"));\n\nvar parseTimeRanges_1 = tslib_1.__importDefault(require(\"./parseTimeRanges\"));\n\nvar createHTMLMediaHook = function createHTMLMediaHook(tag) {\n  return function (elOrProps) {\n    var element;\n    var props;\n\n    if (React.isValidElement(elOrProps)) {\n      element = elOrProps;\n      props = element.props;\n    } else {\n      props = elOrProps;\n    }\n\n    var _a = useSetState_1.default({\n      buffered: [],\n      time: 0,\n      duration: 0,\n      paused: true,\n      muted: false,\n      volume: 1\n    }),\n        state = _a[0],\n        setState = _a[1];\n\n    var ref = react_1.useRef(null);\n\n    var wrapEvent = function wrapEvent(userEvent, proxyEvent) {\n      return function (event) {\n        try {\n          proxyEvent && proxyEvent(event);\n        } finally {\n          userEvent && userEvent(event);\n        }\n      };\n    };\n\n    var onPlay = function onPlay() {\n      return setState({\n        paused: false\n      });\n    };\n\n    var onPause = function onPause() {\n      return setState({\n        paused: true\n      });\n    };\n\n    var onVolumeChange = function onVolumeChange() {\n      var el = ref.current;\n\n      if (!el) {\n        return;\n      }\n\n      setState({\n        muted: el.muted,\n        volume: el.volume\n      });\n    };\n\n    var onDurationChange = function onDurationChange() {\n      var el = ref.current;\n\n      if (!el) {\n        return;\n      }\n\n      var duration = el.duration,\n          buffered = el.buffered;\n      setState({\n        duration: duration,\n        buffered: parseTimeRanges_1.default(buffered)\n      });\n    };\n\n    var onTimeUpdate = function onTimeUpdate() {\n      var el = ref.current;\n\n      if (!el) {\n        return;\n      }\n\n      setState({\n        time: el.currentTime\n      });\n    };\n\n    var onProgress = function onProgress() {\n      var el = ref.current;\n\n      if (!el) {\n        return;\n      }\n\n      setState({\n        buffered: parseTimeRanges_1.default(el.buffered)\n      });\n    };\n\n    if (element) {\n      element = React.cloneElement(element, tslib_1.__assign(tslib_1.__assign({\n        controls: false\n      }, props), {\n        ref: ref,\n        onPlay: wrapEvent(props.onPlay, onPlay),\n        onPause: wrapEvent(props.onPause, onPause),\n        onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange),\n        onDurationChange: wrapEvent(props.onDurationChange, onDurationChange),\n        onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate),\n        onProgress: wrapEvent(props.onProgress, onProgress)\n      }));\n    } else {\n      element = React.createElement(tag, tslib_1.__assign(tslib_1.__assign({\n        controls: false\n      }, props), {\n        ref: ref,\n        onPlay: wrapEvent(props.onPlay, onPlay),\n        onPause: wrapEvent(props.onPause, onPause),\n        onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange),\n        onDurationChange: wrapEvent(props.onDurationChange, onDurationChange),\n        onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate),\n        onProgress: wrapEvent(props.onProgress, onProgress)\n      })); // TODO: fix this typing.\n    } // Some browsers return `Promise` on `.play()` and may throw errors\n    // if one tries to execute another `.play()` or `.pause()` while that\n    // promise is resolving. So we prevent that with this lock.\n    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=593273\n\n\n    var lockPlay = false;\n    var controls = {\n      play: function play() {\n        var el = ref.current;\n\n        if (!el) {\n          return undefined;\n        }\n\n        if (!lockPlay) {\n          var promise = el.play();\n          var isPromise = typeof promise === 'object';\n\n          if (isPromise) {\n            lockPlay = true;\n\n            var resetLock = function resetLock() {\n              lockPlay = false;\n            };\n\n            promise.then(resetLock, resetLock);\n          }\n\n          return promise;\n        }\n\n        return undefined;\n      },\n      pause: function pause() {\n        var el = ref.current;\n\n        if (el && !lockPlay) {\n          return el.pause();\n        }\n      },\n      seek: function seek(time) {\n        var el = ref.current;\n\n        if (!el || state.duration === undefined) {\n          return;\n        }\n\n        time = Math.min(state.duration, Math.max(0, time));\n        el.currentTime = time;\n      },\n      volume: function volume(_volume) {\n        var el = ref.current;\n\n        if (!el) {\n          return;\n        }\n\n        _volume = Math.min(1, Math.max(0, _volume));\n        el.volume = _volume;\n        setState({\n          volume: _volume\n        });\n      },\n      mute: function mute() {\n        var el = ref.current;\n\n        if (!el) {\n          return;\n        }\n\n        el.muted = true;\n      },\n      unmute: function unmute() {\n        var el = ref.current;\n\n        if (!el) {\n          return;\n        }\n\n        el.muted = false;\n      }\n    };\n    react_1.useEffect(function () {\n      var el = ref.current;\n\n      if (!el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (tag === 'audio') {\n            console.error('useAudio() ref to <audio> element is empty at mount. ' + 'It seem you have not rendered the audio element, which it ' + 'returns as the first argument const [audio] = useAudio(...).');\n          } else if (tag === 'video') {\n            console.error('useVideo() ref to <video> element is empty at mount. ' + 'It seem you have not rendered the video element, which it ' + 'returns as the first argument const [video] = useVideo(...).');\n          }\n        }\n\n        return;\n      }\n\n      setState({\n        volume: el.volume,\n        muted: el.muted,\n        paused: el.paused\n      }); // Start media, if autoPlay requested.\n\n      if (props.autoPlay && el.paused) {\n        controls.play();\n      }\n    }, [props.src]);\n    return [element, state, controls, ref];\n  };\n};\n\nexports.default = createHTMLMediaHook;","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/node_modules/react-use/lib/util/createHTMLMediaHook.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","React","__importStar","react_1","useSetState_1","__importDefault","parseTimeRanges_1","createHTMLMediaHook","tag","elOrProps","element","props","isValidElement","_a","default","buffered","time","duration","paused","muted","volume","state","setState","ref","useRef","wrapEvent","userEvent","proxyEvent","event","onPlay","onPause","onVolumeChange","el","current","onDurationChange","onTimeUpdate","currentTime","onProgress","cloneElement","__assign","controls","createElement","lockPlay","play","undefined","promise","isPromise","resetLock","then","pause","seek","Math","min","max","mute","unmute","useEffect","process","env","NODE_ENV","console","error","autoPlay","src"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar React = tslib_1.__importStar(require(\"react\"));\nvar react_1 = require(\"react\");\nvar useSetState_1 = tslib_1.__importDefault(require(\"../useSetState\"));\nvar parseTimeRanges_1 = tslib_1.__importDefault(require(\"./parseTimeRanges\"));\nvar createHTMLMediaHook = function (tag) { return function (elOrProps) {\n    var element;\n    var props;\n    if (React.isValidElement(elOrProps)) {\n        element = elOrProps;\n        props = element.props;\n    }\n    else {\n        props = elOrProps;\n    }\n    var _a = useSetState_1.default({\n        buffered: [],\n        time: 0,\n        duration: 0,\n        paused: true,\n        muted: false,\n        volume: 1,\n    }), state = _a[0], setState = _a[1];\n    var ref = react_1.useRef(null);\n    var wrapEvent = function (userEvent, proxyEvent) {\n        return function (event) {\n            try {\n                proxyEvent && proxyEvent(event);\n            }\n            finally {\n                userEvent && userEvent(event);\n            }\n        };\n    };\n    var onPlay = function () { return setState({ paused: false }); };\n    var onPause = function () { return setState({ paused: true }); };\n    var onVolumeChange = function () {\n        var el = ref.current;\n        if (!el) {\n            return;\n        }\n        setState({\n            muted: el.muted,\n            volume: el.volume,\n        });\n    };\n    var onDurationChange = function () {\n        var el = ref.current;\n        if (!el) {\n            return;\n        }\n        var duration = el.duration, buffered = el.buffered;\n        setState({\n            duration: duration,\n            buffered: parseTimeRanges_1.default(buffered),\n        });\n    };\n    var onTimeUpdate = function () {\n        var el = ref.current;\n        if (!el) {\n            return;\n        }\n        setState({ time: el.currentTime });\n    };\n    var onProgress = function () {\n        var el = ref.current;\n        if (!el) {\n            return;\n        }\n        setState({ buffered: parseTimeRanges_1.default(el.buffered) });\n    };\n    if (element) {\n        element = React.cloneElement(element, tslib_1.__assign(tslib_1.__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) }));\n    }\n    else {\n        element = React.createElement(tag, tslib_1.__assign(tslib_1.__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) })); // TODO: fix this typing.\n    }\n    // Some browsers return `Promise` on `.play()` and may throw errors\n    // if one tries to execute another `.play()` or `.pause()` while that\n    // promise is resolving. So we prevent that with this lock.\n    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=593273\n    var lockPlay = false;\n    var controls = {\n        play: function () {\n            var el = ref.current;\n            if (!el) {\n                return undefined;\n            }\n            if (!lockPlay) {\n                var promise = el.play();\n                var isPromise = typeof promise === 'object';\n                if (isPromise) {\n                    lockPlay = true;\n                    var resetLock = function () {\n                        lockPlay = false;\n                    };\n                    promise.then(resetLock, resetLock);\n                }\n                return promise;\n            }\n            return undefined;\n        },\n        pause: function () {\n            var el = ref.current;\n            if (el && !lockPlay) {\n                return el.pause();\n            }\n        },\n        seek: function (time) {\n            var el = ref.current;\n            if (!el || state.duration === undefined) {\n                return;\n            }\n            time = Math.min(state.duration, Math.max(0, time));\n            el.currentTime = time;\n        },\n        volume: function (volume) {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            volume = Math.min(1, Math.max(0, volume));\n            el.volume = volume;\n            setState({ volume: volume });\n        },\n        mute: function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            el.muted = true;\n        },\n        unmute: function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            el.muted = false;\n        },\n    };\n    react_1.useEffect(function () {\n        var el = ref.current;\n        if (!el) {\n            if (process.env.NODE_ENV !== 'production') {\n                if (tag === 'audio') {\n                    console.error('useAudio() ref to <audio> element is empty at mount. ' +\n                        'It seem you have not rendered the audio element, which it ' +\n                        'returns as the first argument const [audio] = useAudio(...).');\n                }\n                else if (tag === 'video') {\n                    console.error('useVideo() ref to <video> element is empty at mount. ' +\n                        'It seem you have not rendered the video element, which it ' +\n                        'returns as the first argument const [video] = useVideo(...).');\n                }\n            }\n            return;\n        }\n        setState({\n            volume: el.volume,\n            muted: el.muted,\n            paused: el.paused,\n        });\n        // Start media, if autoPlay requested.\n        if (props.autoPlay && el.paused) {\n            controls.play();\n        }\n    }, [props.src]);\n    return [element, state, controls, ref];\n}; };\nexports.default = createHTMLMediaHook;\n"]},"metadata":{},"sourceType":"script"}