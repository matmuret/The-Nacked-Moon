{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport MyContext from '../Context/MyContext';\nimport { useForm } from 'react-hook-form';\nimport { useParams } from 'react-router-dom';\nexport default function AlbumEdit(props) {\n  _s();\n\n  const {\n    newAlbum,\n    setNewAlbum\n  } = useContext(MyContext);\n  const {\n    register,\n    handleSubmit\n  } = useForm(); // initialize the hook\n\n  const {\n    id\n  } = useParams();\n  /* console.log({ newAlbum }); */\n  // get the album info first\n\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/api/albumup/${id}`);\n        const albums = await res.json();\n        console.log(albums);\n        setNewAlbum(albums);\n      } catch (err) {}\n    };\n\n    getResult();\n  }, []);\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    /* console.log({ data }); */\n\n    for (let i = 0; i < data.images.length; i++) {\n      formData.append('images', data.images[i]);\n    }\n    /*  formData.append(\"images\", data.images); */\n\n    /*  for (const image of data.image) {\n      formData.append('image[]', image)\n    } */\n\n    /* const data={ ...images, ...newAlbum} */\n\n\n    for (let key in newAlbum) {\n      //creates a loop iterating over arrays\n      formData.append(key, newAlbum[key]);\n    }\n    /* console.log({data}) */\n\n\n    const res = await fetch(`http://localhost:5000/api/albumup/${newAlbum._id}`, {\n      method: 'PUT',\n      body: formData\n    });\n    const fromApi = await res.json();\n    /* console.log(fromApi); */\n\n    formData.delete('images');\n    setNewAlbum(fromApi.updatedAlbum);\n    /* setNewAlbum({ ...newAlbum, images: fromApi.createdAlbum.images }); */\n  };\n\n  const Delete = url => {//to be implemented\n  };\n\n  const DeleteAlbum = url => {\n    //to be implemented\n    props.history.goBack();\n  };\n\n  console.log('rerendering', newAlbum);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"VisionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"photos in \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, newAlbum.albumName), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 80\n    }\n  }), ' ', \"click on one photo to delete\", ' '), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Add photo\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: DeleteAlbum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Delete Album\")), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"images\",\n    ref: register,\n    required: true,\n    type: \"file\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"soulsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, newAlbum.images && newAlbum.images.map(url => {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      /* onClick={() => Delete(item)} */\n      className: \"soulsItems\",\n      src: url,\n      key: url\n      /* image={item.url_l} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    });\n  })));\n}\n\n_s(AlbumEdit, \"MUbG2/GQZ1BGPBiKWUHo8DpSJTU=\", false, function () {\n  return [useForm, useParams];\n});\n\n_c = AlbumEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumEdit\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumEdit.js"],"names":["React","Fragment","useContext","useEffect","MyContext","useForm","useParams","AlbumEdit","props","newAlbum","setNewAlbum","register","handleSubmit","id","getResult","res","fetch","albums","json","console","log","err","onSubmit","data","formData","FormData","i","images","length","append","key","_id","method","body","fromApi","delete","updatedAlbum","Delete","url","DeleteAlbum","history","goBack","textAlign","color","albumName","map"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport MyContext from '../Context/MyContext';\nimport { useForm } from 'react-hook-form';\nimport { useParams } from 'react-router-dom';\n\nexport default function AlbumEdit(props) {\n  const { newAlbum, setNewAlbum } = useContext(MyContext);\n  const { register, handleSubmit } = useForm(); // initialize the hook\n  const { id } = useParams();\n  /* console.log({ newAlbum }); */\n\n  // get the album info first\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/api/albumup/${id}`);\n        const albums = await res.json();\n        console.log(albums);\n        setNewAlbum(albums);\n      } catch (err) {}\n    };\n    getResult();\n  }, []);\n\n  const onSubmit = async (data) => {\n    const formData = new FormData();\n    /* console.log({ data }); */\n    for (let i = 0; i < data.images.length; i++) {\n      formData.append('images', data.images[i]);\n    }\n\n    /*  formData.append(\"images\", data.images); */\n    /*  for (const image of data.image) {\n      formData.append('image[]', image)\n   } */\n    /* const data={ ...images, ...newAlbum} */\n    for (let key in newAlbum) {\n      //creates a loop iterating over arrays\n      formData.append(key, newAlbum[key]);\n    }\n    /* console.log({data}) */\n    const res = await fetch(`http://localhost:5000/api/albumup/${newAlbum._id}`, {\n      method: 'PUT',\n      body: formData,\n    });\n    const fromApi = await res.json();\n    /* console.log(fromApi); */\n    formData.delete('images');\n    setNewAlbum(fromApi.updatedAlbum);\n    /* setNewAlbum({ ...newAlbum, images: fromApi.createdAlbum.images }); */\n  };\n\n  const Delete = (url) => {\n    //to be implemented\n  };\n\n  const DeleteAlbum = (url) => {\n    //to be implemented\n    props.history.goBack();\n  };\n  console.log('rerendering', newAlbum);\n  return (\n    <Fragment>\n      <div style={{ textAlign: 'center' }}>\n        <h1 className='VisionTitle'>\n          photos in <span style={{ color: 'red' }}>{newAlbum.albumName}</span> <br></br>{' '}\n          click on one photo to delete{' '}\n        </h1>\n\n        <br></br>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <button type='submit'>\n            <h3>Add photo</h3>\n          </button>\n          <button type='submit' onClick={DeleteAlbum}>\n            <h3>Delete Album</h3>\n          </button>\n\n          {/* <div style={{margin:\"auto\", }}> */}\n          <input name='images' ref={register} required type='file' multiple />\n          {/* </div> */}\n        </form>\n      </div>\n      <div className='soulsContainer'>\n        {newAlbum.images &&\n          newAlbum.images.map((url) => {\n            return (\n              <img\n                /* onClick={() => Delete(item)} */\n                className='soulsItems'\n                src={url}\n                key={url}\n                /* image={item.url_l} */\n              />\n            );\n          })}\n      </div>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}