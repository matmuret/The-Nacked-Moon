{"ast":null,"code":"import _regeneratorRuntime from\"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext}from\"react\";import{useForm}from\"react-hook-form\";import Fade from\"react-reveal/Fade\";import{useLocation}from\"../../node_modules/react-use/lib/index\";import MyContext from\"../Context/MyContext\";export default function CreateAlbum(props){var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;// initialize the hook\nvar _useContext=useContext(MyContext),newAlbum=_useContext.newAlbum,setNewAlbum=_useContext.setNewAlbum;var location=useLocation();var params=new URLSearchParams(location.search);var name=params.get('name');console.log(params);var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){var formData,key,res,album;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:formData=new FormData();for(key in data){formData.append(key,data[key]);}_context.next=4;return fetch(\"http://localhost:5000/api/albumup\",{method:\"POST\",body:formData});case 4:res=_context.sent;_context.next=7;return res.json();case 7:album=_context.sent;setNewAlbum(album.createdAlbum);alert(\"Album Created! Proceed to Add Photos\");/* ;\n    console.log(album); */case 10:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();var addPhoto=function addPhoto(){props.history.push(\"/albumedit/\".concat(newAlbum._id));// ?name=${newAlbum.createAlbum.albumName}\n};return/*#__PURE__*/React.createElement(Fade,{bottom:true,cascade:true},/*#__PURE__*/React.createElement(\"div\",{className:\"authContainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form2\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit(onSubmit)},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Name\")),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",name:\"albumName\",ref:register({required:true})}),errors.name&&\"Name is required.\",/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"category\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Category \")),/*#__PURE__*/React.createElement(\"select\",{id:\"category\",name:\"category\",ref:register},/*#__PURE__*/React.createElement(\"option\",{value:name},name)),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Description\")),/*#__PURE__*/React.createElement(\"textarea\",{type:\"text\",name:\"description\",ref:register({required:false})}),errors.description&&\"Description is required.\",/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Submit\")),newAlbum._id?/*#__PURE__*/React.createElement(\"button\",{onClick:addPhoto},/*#__PURE__*/React.createElement(\"h3\",null,\"Add photos\")):/*#__PURE__*/React.createElement(\"button\",{onClick:addPhoto,style:{display:\"none\"}},/*#__PURE__*/React.createElement(\"h3\",null,\"Add photos\"))))));}","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/CreateAlbum.js"],"names":["React","useContext","useForm","Fade","useLocation","MyContext","CreateAlbum","props","register","handleSubmit","errors","newAlbum","setNewAlbum","location","params","URLSearchParams","search","name","get","console","log","onSubmit","data","formData","FormData","key","append","fetch","method","body","res","json","album","createdAlbum","alert","addPhoto","history","push","_id","required","description","display"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Fade from \"react-reveal/Fade\";\nimport { useLocation } from \"../../node_modules/react-use/lib/index\";\nimport MyContext from \"../Context/MyContext\";\n\nexport default function CreateAlbum(props) {\n  const { register, handleSubmit, errors } = useForm(); // initialize the hook\n  const { newAlbum, setNewAlbum } = useContext(MyContext);\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const name = params.get('name');\nconsole.log(params)\n\n  const onSubmit = async (data) => {\n   \n  \n    const formData = new FormData();\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    const album = await res.json();\n    setNewAlbum(album.createdAlbum);\n    alert(\"Album Created! Proceed to Add Photos\")\n    \n    /* ;\n    console.log(album); */\n  };\n\n  const addPhoto = () => {\n   props.history.push(`/albumedit/${newAlbum._id}`); // ?name=${newAlbum.createAlbum.albumName}\n  }; \n\n  return (\n    <Fade bottom cascade={true}>\n      <div className=\"authContainer\">\n        <div className=\"form2\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <label>\n              <h3>Name</h3>\n            </label>\n            <input\n              type=\"text\"\n              name=\"albumName\"\n              ref={register({ required: true })}\n            />\n            {errors.name && \"Name is required.\"}\n            <label htmlFor=\"category\">\n              <h3>Category </h3>\n            </label>\n  \n            <select id=\"category\" name=\"category\" ref={register}>\n              <option value={name}>{name}</option>\n              {/* <option value=\"fashion\">fashion</option>\n              <option value=\"outdoors\">outdoors</option>\n              <option value=\"souls\">souls</option>\n              <option value=\"projects\">projects</option> */}\n            </select>\n\n            <label>\n              <h3>Description</h3>\n            </label>\n            <textarea\n              type=\"text\"\n              name=\"description\"\n              ref={register({ required: false })}\n            />\n            {errors.description && \"Description is required.\"}\n\n            <br></br>\n            <button type=\"submit\" >\n              <h3>Submit</h3>\n            </button>\n            {newAlbum._id? (\n              <button onClick={addPhoto}  >\n              <h3>Add photos</h3>\n            </button>\n            ):(\n              <button onClick={addPhoto} style={{display:\"none\"}} >\n              <h3>Add photos</h3>\n            </button>\n            )}\n            \n          </form>\n        </div>\n      </div>\n    </Fade>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}