{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useForm } from \"react-hook-form\";\nexport default function AlbumEdit(props) {\n  _s();\n\n  const {\n    newAlbum,\n    setNewAlbum,\n    getPhotos\n  } = useContext(MyContext);\n  const {\n    register,\n    handleSubmit\n  } = useForm(); // initialize the hook\n\n  console.log({\n    newAlbum\n  });\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    data = { ...data,\n      ...newAlbum\n    };\n\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n\n    console.log({\n      data\n    });\n    /* const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData,\n    });\n    const fromApi = await res.json();\n    alert(JSON.stringify(res));\n    console.log(fromApi); */\n  };\n\n  const Delete = url => {//to be implemented\n  };\n\n  const DeleteAlbum = url => {\n    //to be implemented\n    props.history.goBack();\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"VisionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"photos in \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Album\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 65\n    }\n  }), \" click on one photo to delete\", \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Add photo\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => DeleteAlbum(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Delete Albim\")), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"image\",\n    ref: register,\n    required: true,\n    type: \"file\",\n    name: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"soulsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, getPhotos.map(item => {\n    if (item.width_m <= 357) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        onClick: () => Delete(item.url_l),\n        classname: \"soulsItems\",\n        src: item.url_m,\n        key: item.id,\n        image: item.url_l,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      });\n    }\n  })));\n}\n\n_s(AlbumEdit, \"wmLNKQCAJrjwOT9doFfXzZ6Ny3Q=\", false, function () {\n  return [useForm];\n});\n\n_c = AlbumEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumEdit\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumEdit.js"],"names":["React","Fragment","useContext","MyContext","useForm","AlbumEdit","props","newAlbum","setNewAlbum","getPhotos","register","handleSubmit","console","log","onSubmit","data","formData","FormData","key","append","Delete","url","DeleteAlbum","history","goBack","textAlign","color","map","item","width_m","url_l","url_m","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function AlbumEdit(props) {\n  const { newAlbum, setNewAlbum, getPhotos } = useContext(MyContext);\n  const { register, handleSubmit } = useForm(); // initialize the hook\n  \n  console.log({newAlbum})\n  \n  const onSubmit = async (data) => {\n    const formData = new FormData();\n    data={ ...data, ...newAlbum}\n    for (let key in data) {\n      formData.append(key, data[key]);\n    }\n    console.log({data})\n    /* const res = await fetch(\"http://localhost:5000/api/albumup\", {\n      method: \"POST\",\n      body: formData,\n    });\n    const fromApi = await res.json();\n    alert(JSON.stringify(res));\n    console.log(fromApi); */\n  };\n  const Delete = (url) => {\n    //to be implemented\n  };\n  const DeleteAlbum = (url) => {\n    //to be implemented\n    props.history.goBack()\n  };\n\n  return (\n    <Fragment>\n      <div style={{textAlign:\"center\"}}>\n        <h1 className=\"VisionTitle\">\n          photos in <span style={{ color: \"red\" }}>Album</span> <br></br> click\n          on one photo to delete{\" \"}\n        </h1>\n        \n        \n        \n        <br></br>\n        <form onSubmit={handleSubmit(onSubmit)}>\n        <button type=\"submit\">\n          <h3>Add photo</h3>\n        </button>\n        <button type=\"submit\" onClick={() => DeleteAlbum()}>\n          <h3>Delete Albim</h3>\n        </button>\n        \n        {/* <div style={{margin:\"auto\", }}> */}\n        <input name=\"image\" ref={register} required type=\"file\" name=\"image\" />\n        {/* </div> */}\n        </form>\n      </div>\n      <div className=\"soulsContainer\">\n        {getPhotos.map((item) => {\n          if (item.width_m <= 357) {\n            return (\n              <img\n                onClick={() => Delete(item.url_l)}\n                classname=\"soulsItems\"\n                src={item.url_m}\n                key={item.id}\n                image={item.url_l}\n              />\n            );\n          }\n        })}\n      </div>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}