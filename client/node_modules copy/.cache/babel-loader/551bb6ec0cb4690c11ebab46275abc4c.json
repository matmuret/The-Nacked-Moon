{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/SoulsInABox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, Fragment, useState } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport Modal from \"react-modal\";\nimport Fade from \"react-reveal/Fade\";\nexport default function SoulsInABox() {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedImg, setSelectedImg] = useState(null);\n  const {\n    getData,\n    setGetData\n  } = useContext(MyContext);\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/api/albumup/bycategory?name=${\"souls\"}`);\n        const albums = await res.json();\n        console.log(albums);\n        setGetData(albums);\n      } catch (err) {}\n    };\n\n    getResult();\n  }, []);\n\n  const callBoth = url => {\n    setIsOpen(true);\n    setSelectedImg(url);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    onRequestClose: () => setIsOpen(false),\n    style: {\n      overlay: {\n        backgroundColor: \"rgba(10, 7, 7, 0.753)\"\n      },\n      content: {\n        backgroundColor: \"black\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modalDiv\",\n    style: {\n      zIndex: '2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Close\")), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"modalImage\",\n    src: selectedImg,\n    key: selectedImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Fade, {\n    bottom: true,\n    cascade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"soulsBigContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, getData && getData.map(album => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"soulsTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, \"Souls In A Box\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"soulsText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, album.description));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"soulsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, getData && getData.map(album => {\n    return album.images.map(url => {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        onClick: () => {\n          callBoth(url);\n        },\n        classname: \"soulsItems\",\n        src: url,\n        key: url._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      });\n    });\n  })))));\n}\n\n_s(SoulsInABox, \"pn/fooa/rNxrfcULRjmPYcuBC9g=\");\n\n_c = SoulsInABox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SoulsInABox\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/SoulsInABox.jsx"],"names":["React","useEffect","useContext","Fragment","useState","MyContext","Modal","Fade","SoulsInABox","isOpen","setIsOpen","selectedImg","setSelectedImg","getData","setGetData","getResult","res","fetch","albums","json","console","log","err","callBoth","url","overlay","backgroundColor","content","zIndex","map","album","description","images","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, Fragment,useState } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport Modal from \"react-modal\";\nimport Fade from \"react-reveal/Fade\";\n\nexport default function SoulsInABox() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedImg, setSelectedImg] = useState(null);\n  const { getData, setGetData } = useContext(MyContext);\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const res = await fetch(\n          `http://localhost:5000/api/albumup/bycategory?name=${\"souls\"}`\n        );\n        const albums = await res.json();\n        console.log(albums);\n        setGetData(albums);\n      } catch (err) {}\n    };\n    getResult();\n  }, []);\n  const callBoth = (url) => {\n    setIsOpen(true);\n    setSelectedImg(url);\n  };\n  return (\n    <Fragment>\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={() => setIsOpen(false)}\n        style={{\n          overlay: {\n            backgroundColor: \"rgba(10, 7, 7, 0.753)\",\n          },\n          content: {\n            backgroundColor: \"black\",\n          },\n        }}\n      >\n        <div className=\"modalDiv\" style={{zIndex:'2'}}>\n          <button onClick={() => setIsOpen(false)}>\n            <h3>Close</h3>\n          </button>\n          <img className=\"modalImage\" src={selectedImg} key={selectedImg} />\n        </div>\n      </Modal>\n\n      <Fade bottom cascade={true}>\n        <div className=\"soulsBigContainer\">\n          {getData &&\n            getData.map((album) => {\n              return (\n                <div>\n                  <h2 className=\"soulsTitle\">Souls In A Box</h2>\n                  <p className=\"soulsText\">{album.description}</p>\n                </div>\n              );\n            })}\n          <div className=\"soulsContainer\">\n            {getData &&\n              getData.map((album) => {\n                return album.images.map((url) => {\n                  return (\n                    <img\n                      onClick={() => {callBoth(url)}}\n                      classname=\"soulsItems\"\n                      src={url}\n                      key={url._id}\n                    />\n                  );\n                });\n              })}\n          </div>\n        </div>\n      </Fade>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}