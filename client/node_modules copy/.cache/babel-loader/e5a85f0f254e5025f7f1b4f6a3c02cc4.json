{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar react_1 = require(\"react\");\n\nvar useMount_1 = tslib_1.__importDefault(require(\"./useMount\"));\n\nvar useSetState_1 = tslib_1.__importDefault(require(\"./useSetState\"));\n\nvar voices = typeof window === 'object' && typeof window.speechSynthesis === 'object' ? window.speechSynthesis.getVoices() : [];\n\nvar useSpeech = function (text, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var _a = useSetState_1.default({\n    isPlaying: false,\n    lang: opts.lang || 'default',\n    voice: opts.voice || voices[0],\n    rate: opts.rate || 1,\n    pitch: opts.pitch || 1,\n    volume: opts.volume || 1\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  var uterranceRef = react_1.useRef(null);\n  useMount_1.default(function () {\n    var utterance = new SpeechSynthesisUtterance(text);\n    opts.lang && (utterance.lang = opts.lang);\n    opts.voice && (utterance.voice = opts.voice);\n    utterance.rate = opts.rate || 1;\n    utterance.pitch = opts.pitch || 1;\n    utterance.volume = opts.volume || 1;\n\n    utterance.onstart = function () {\n      return setState({\n        isPlaying: true\n      });\n    };\n\n    utterance.onresume = function () {\n      return setState({\n        isPlaying: true\n      });\n    };\n\n    utterance.onend = function () {\n      return setState({\n        isPlaying: false\n      });\n    };\n\n    utterance.onpause = function () {\n      return setState({\n        isPlaying: false\n      });\n    };\n\n    uterranceRef.current = utterance;\n    window.speechSynthesis.speak(uterranceRef.current);\n  });\n  return state;\n};\n\nexports.default = useSpeech;","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/node_modules/react-use/lib/useSpeech.js"],"names":["Object","defineProperty","exports","value","tslib_1","require","react_1","useMount_1","__importDefault","useSetState_1","voices","window","speechSynthesis","getVoices","useSpeech","text","opts","_a","default","isPlaying","lang","voice","rate","pitch","volume","state","setState","uterranceRef","useRef","utterance","SpeechSynthesisUtterance","onstart","onresume","onend","onpause","current","speak"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar useMount_1 = tslib_1.__importDefault(require(\"./useMount\"));\nvar useSetState_1 = tslib_1.__importDefault(require(\"./useSetState\"));\nvar voices = typeof window === 'object' && typeof window.speechSynthesis === 'object' ? window.speechSynthesis.getVoices() : [];\nvar useSpeech = function (text, opts) {\n    if (opts === void 0) { opts = {}; }\n    var _a = useSetState_1.default({\n        isPlaying: false,\n        lang: opts.lang || 'default',\n        voice: opts.voice || voices[0],\n        rate: opts.rate || 1,\n        pitch: opts.pitch || 1,\n        volume: opts.volume || 1,\n    }), state = _a[0], setState = _a[1];\n    var uterranceRef = react_1.useRef(null);\n    useMount_1.default(function () {\n        var utterance = new SpeechSynthesisUtterance(text);\n        opts.lang && (utterance.lang = opts.lang);\n        opts.voice && (utterance.voice = opts.voice);\n        utterance.rate = opts.rate || 1;\n        utterance.pitch = opts.pitch || 1;\n        utterance.volume = opts.volume || 1;\n        utterance.onstart = function () { return setState({ isPlaying: true }); };\n        utterance.onresume = function () { return setState({ isPlaying: true }); };\n        utterance.onend = function () { return setState({ isPlaying: false }); };\n        utterance.onpause = function () { return setState({ isPlaying: false }); };\n        uterranceRef.current = utterance;\n        window.speechSynthesis.speak(uterranceRef.current);\n    });\n    return state;\n};\nexports.default = useSpeech;\n"]},"metadata":{},"sourceType":"script"}