{"ast":null,"code":"import { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS } from \"../Constants/orderConstants\";\nimport Axios from \"axios\";\nimport { CART_EMPTY } from \"../Constants/CartConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState(); //getState return the whole redux store\n\n    console.log({\n      order\n    });\n    const {\n      data\n    } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem(\"cartItems\");\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Actions/orderAction.js"],"names":["ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","Axios","CART_EMPTY","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","console","log","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message"],"mappings":"AAAA,SACEA,iBADF,EAEEC,oBAFF,EAGEC,oBAHF,QAIO,6BAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,4BAA3B;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAClED,EAAAA,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAER,oBAAR;AAA8BS,IAAAA,OAAO,EAAEJ;AAAvC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AACJK,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AADR,QAEFJ,QAAQ,EAFZ,CADE,CAGc;;AAChBK,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACR,MAAAA;AAAD,KAAZ;AACA,UAAM;AAAES,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAW,aAAX,EAA0BV,KAA1B,EAAiC;AACtDW,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASN,QAAQ,CAACO,KAAM;AADjC;AAD6C,KAAjC,CAAvB;AAKAZ,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP,oBAAR;AAA8BQ,MAAAA,OAAO,EAAEK,IAAI,CAACT;AAA5C,KAAD,CAAR;AACAC,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACAgB,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACD,GAbD,CAaE,OAAOC,KAAP,EAAc;AACdf,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAET,iBADC;AAEPU,MAAAA,OAAO,EACLY,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CAxBM","sourcesContent":["import {\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n} from \"../Constants/orderConstants\";\nimport Axios from \"axios\";\nimport { CART_EMPTY } from \"../Constants/CartConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\n  try {\n    const {\n      userSignin: { userInfo },\n    } = getState(); //getState return the whole redux store\n    console.log({order})\n    const { data } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\n    dispatch({ type: CART_EMPTY });\n    localStorage.removeItem(\"cartItems\")\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}