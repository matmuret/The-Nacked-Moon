{"ast":null,"code":"var _jsxFileName = \"/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumDelete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment, useContext } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nexport default function AlbumDelete(props) {\n  _s();\n\n  const {\n    getAlbum,\n    setGetAlbum\n  } = useContext(MyContext);\n  const {\n    newAlbum,\n    setNewAlbum\n  } = useContext(MyContext);\n  const {\n    register,\n    handleSubmit\n  } = useForm(); // initialize the hook\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  console.log(id);\n  /* let { handleModal } = React.useContext(ModalContext); */\n\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const url = `http://localhost:5000/api/albumup/${id}`;\n        const res = await fetch(url);\n        console.log({\n          url\n        });\n        const album = await res.json();\n        console.log(album);\n        setGetAlbum(album);\n      } catch (err) {}\n    };\n\n    getResult();\n  }, []);\n  /* console.log(getAlbum); */\n\n  const onSubmit = async data => {\n    const formData = new FormData();\n    /* console.log({ data }); */\n\n    for (let i = 0; i < data.images.length; i++) {\n      formData.append(\"images\", data.images[i]);\n    }\n    /*  formData.append(\"images\", data.images); */\n\n    /*  for (const image of data.image) {\n          formData.append('image[]', image)\n       } */\n\n    /* const data={ ...images, ...newAlbum} */\n\n\n    for (let key in getAlbum) {\n      //creates a loop iterating over arrays\n      formData.append(key, getAlbum[key]);\n    }\n    /* console.log({data}) */\n\n\n    const res = await fetch(`http://localhost:5000/api/albumup/${id}`, {\n      method: \"PUT\",\n      body: formData\n    });\n    const fromApi = await res.json();\n    /* console.log(fromApi); */\n\n    formData.delete(\"images\");\n    setGetAlbum(fromApi.updatedAlbum);\n    /* setNewAlbum({ ...newAlbum, images: fromApi.createdAlbum.images }); */\n  };\n\n  const DeletePhoto = async url => {\n    const name = url.substring(39);\n    console.log(name);\n    const deleteMethod = {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    };\n\n    try {\n      const urlToBeDeleted = `http://localhost:5000/api/albumup/delete/${name}`;\n      const res = await fetch(urlToBeDeleted, deleteMethod);\n      console.log({\n        urlToBeDeleted\n      });\n      const result = await res.json();\n      console.log(result);\n      /* history.goBack(); */\n    } catch (err) {}\n  };\n\n  const DeleteAlbum = async e => {\n    e.preventDefault();\n    const deleteMethod = {\n      method: \"DELETE\",\n      // Method itself\n      headers: {\n        \"Content-type\": \"application/json\" // Indicates the content\n\n      } // No need to have body, because we don't send nothing to the server.\n\n    }; // Make the HTTP Delete call using fetch api\n\n    try {\n      const url = `http://localhost:5000/api/albumup/delete/${id}`;\n      const res = await fetch(url, deleteMethod);\n      console.log({\n        url\n      });\n      const result = await res.json();\n      console.log(result);\n      history.goBack();\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"VisionTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"photos in \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, getAlbum.albumName), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), \" click on one photo to delete\", \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Add photo\")), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"images\",\n    ref: register,\n    required: true,\n    type: \"file\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"\",\n    onClick: e => DeleteAlbum(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Delete Album\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"soulsContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, getAlbum.images && getAlbum.images.map(url => {\n    console.log(getAlbum);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => DeletePhoto(url),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      className: \"soulsItems\",\n      src: url,\n      key: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }));\n  })));\n}\n\n_s(AlbumDelete, \"rf49AvwmMQkarsACvtQ25eyecbs=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = AlbumDelete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlbumDelete\");","map":{"version":3,"sources":["/Users/filippo/Documents/DCI/myProjects/TheNakedMoon/Frontend/src/Components/AlbumDelete.js"],"names":["React","useEffect","Fragment","useContext","MyContext","useHistory","useParams","useForm","AlbumDelete","props","getAlbum","setGetAlbum","newAlbum","setNewAlbum","register","handleSubmit","id","history","console","log","getResult","url","res","fetch","album","json","err","onSubmit","data","formData","FormData","i","images","length","append","key","method","body","fromApi","delete","updatedAlbum","DeletePhoto","name","substring","deleteMethod","headers","urlToBeDeleted","result","DeleteAlbum","e","preventDefault","goBack","textAlign","color","albumName","map"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment, useContext } from \"react\";\nimport MyContext from \"../Context/MyContext\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function AlbumDelete(props) {\n  const { getAlbum, setGetAlbum } = useContext(MyContext);\n  const { newAlbum, setNewAlbum } = useContext(MyContext);\n  const { register, handleSubmit } = useForm(); // initialize the hook\n  const { id } = useParams();\n  const history = useHistory();\n  console.log(id);\n  /* let { handleModal } = React.useContext(ModalContext); */\n\n  useEffect(() => {\n    const getResult = async () => {\n      try {\n        const url = `http://localhost:5000/api/albumup/${id}`;\n        const res = await fetch(url);\n        console.log({ url });\n        const album = await res.json();\n        console.log(album);\n        setGetAlbum(album);\n      } catch (err) {}\n    };\n    getResult();\n  }, []);\n  /* console.log(getAlbum); */\n\n  const onSubmit = async (data) => {\n    const formData = new FormData();\n    /* console.log({ data }); */\n    for (let i = 0; i < data.images.length; i++) {\n      formData.append(\"images\", data.images[i]);\n    }\n\n    /*  formData.append(\"images\", data.images); */\n    /*  for (const image of data.image) {\n          formData.append('image[]', image)\n       } */\n    /* const data={ ...images, ...newAlbum} */\n    for (let key in getAlbum) {\n      //creates a loop iterating over arrays\n      formData.append(key, getAlbum[key]);\n    }\n    /* console.log({data}) */\n    const res = await fetch(`http://localhost:5000/api/albumup/${id}`, {\n      method: \"PUT\",\n      body: formData,\n    });\n    const fromApi = await res.json();\n    /* console.log(fromApi); */\n    formData.delete(\"images\");\n    setGetAlbum(fromApi.updatedAlbum);\n    /* setNewAlbum({ ...newAlbum, images: fromApi.createdAlbum.images }); */\n  };\n  const DeletePhoto = async (url) => {\n   const name= url.substring(39)\n   console.log(name)\n    const deleteMethod = {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n    };\n    try {\n      const urlToBeDeleted = `http://localhost:5000/api/albumup/delete/${name}`;\n      \n      const res = await fetch(urlToBeDeleted, deleteMethod);\n      console.log({ urlToBeDeleted });\n      const result = await res.json();\n      console.log(result);\n      /* history.goBack(); */\n    } catch (err) {}\n  };\n  const DeleteAlbum = async (e) => {\n    e.preventDefault();\n    const deleteMethod = {\n      method: \"DELETE\", // Method itself\n      headers: {\n        \"Content-type\": \"application/json\", // Indicates the content\n      },\n      // No need to have body, because we don't send nothing to the server.\n    };\n    // Make the HTTP Delete call using fetch api\n    try {\n      const url = `http://localhost:5000/api/albumup/delete/${id}`;\n      const res = await fetch(url, deleteMethod);\n      console.log({ url });\n      const result = await res.json();\n      console.log(result);\n      history.goBack();\n    } catch (err) {}\n  };\n\n  return (\n    <Fragment>\n      <div style={{ textAlign: \"center\" }}>\n        <h1 className=\"VisionTitle\">\n          photos in <span style={{ color: \"red\" }}>{getAlbum.albumName}</span>{\" \"}\n          <br></br> click on one photo to delete{\" \"}\n        </h1>\n\n        <br></br>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <button type=\"submit\">\n            <h3>Add photo</h3>\n          </button>\n\n          <input name=\"images\" ref={register} required type=\"file\" multiple />\n        </form>\n        <button type=\"\" onClick={(e) => DeleteAlbum(e)}>\n          <h3>Delete Album</h3>\n        </button>\n      </div>\n      <div className=\"soulsContainer\">\n        {getAlbum.images &&\n          getAlbum.images.map((url) => {\n            console.log(getAlbum);\n            return (\n              <div onClick={() => DeletePhoto(url)}>\n                {\" \"}\n                <img className=\"soulsItems\" src={url} key={url} />\n              </div>\n            );\n          })}\n      </div>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}